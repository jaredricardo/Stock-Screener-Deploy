{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/ApiTicker.js\";\nimport React, { Component } from 'react';\nimport getTicker from '../api.js';\nexport class ApiTicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTickerChange = e => {\n      this.setState({\n        tickerInput: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState(await this.getTicker(this.state.tickerInput));\n    };\n\n    this.state = {\n      ticker: null,\n      price: null,\n      volume: null,\n      tickerInput: ''\n    };\n  }\n\n  async componentDidMount() {}\n\n  render() {\n    const ticker = this.state.ticker;\n    const price = this.state.price;\n    const lastTradingDate = this.state.lastTradingDate;\n    const volume = this.state.volume;\n    const changePercent = this.state.changePercent;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \" Current Ticker: \", ticker, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \" As of \", lastTradingDate, \", the price of  \", ticker, \" was $\", price, \", at a change of \", changePercent, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \" Volume traded on \", lastTradingDate, \" was \", volume, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Ticker:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.tickerInput,\n      onChange: this.handleTickerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\nexport default ApiTicker; // import React, { Component } from 'react'\n// export class ApiTicker extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ticker: null,\n//             price: null,\n//             volume: null,\n//             tickerInput: ''\n//         }\n//     }\n//     handleTickerChange = (e) => {\n//         this.setState({\n//             tickerInput: e.target.value\n//         })\n//     }\n//     handleSubmit = async (e) => {\n//         e.preventDefault();\n//         this.setState(await this.getTicker(this.state.tickerInput))\n//     }\n//     async getTicker(ticker) {\n//         const url = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=' + ticker + '&apikey=TDYHB4DGZLP62GJE&datatype=json'\n//         const result = await fetch(url, {\n//             method: 'GET',\n//             headers: {\n//                 'Accept' : 'application/json',\n//                 'Content-Type':'application/json',\n//             }\n//         })\n//         const data = await result.json()\n//         return {\n//             ticker: data[\"Global Quote\"][\"01. symbol\"],\n//             price: data[\"Global Quote\"][\"05. price\"],\n//             volume: data[\"Global Quote\"][\"06. volume\"],\n//             lastTradingDate: data[\"Global Quote\"][\"07. latest trading day\"],\n//             changePercent: data[\"Global Quote\"][\"10. change percent\"]\n//         }\n//     } \n//     async componentDidMount() {\n//     }\n//     render() {\n//         const ticker = this.state.ticker\n//         const price = this.state.price\n//         const lastTradingDate =  this.state.lastTradingDate\n//         const volume = this.state.volume\n//         const changePercent = this.state.changePercent\n//         return (\n//             <div className=\"container\">\n//                 <h1> Current Ticker: {ticker} </h1>\n//                 <h5> As of {lastTradingDate}, the price of  {ticker} was ${price}, at a change of {changePercent} </h5> \n//                 <h5> Volume traded on {lastTradingDate} was {volume} </h5> \n//                 <div>\n//                     <form onSubmit={this.handleSubmit}>\n//                         <label>\n//                             Ticker:\n//                             <input type=\"text\"  value={this.state.tickerInput} onChange={this.handleTickerChange}/>\n//                         </label>\n//                         <input type=\"submit\" value=\"submit\" />\n//                     </form>\n//                 </div>\n//              </div>\n//         )\n//     }\n// }\n// export default ApiTicker","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/ApiTicker.js"],"names":["React","Component","getTicker","ApiTicker","constructor","props","handleTickerChange","e","setState","tickerInput","target","value","handleSubmit","preventDefault","state","ticker","price","volume","componentDidMount","render","lastTradingDate","changePercent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,kBAVmB,GAUGC,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AADZ,OAAd;AAGH,KAdkB;;AAAA,SAgBnBC,YAhBmB,GAgBJ,MAAOL,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKL,QAAL,CAAc,MAAM,KAAKN,SAAL,CAAe,KAAKY,KAAL,CAAWL,WAA1B,CAApB;AACH,KAnBkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,MAAM,EAAE,IAHC;AAITR,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAeD,QAAMS,iBAAN,GAA0B,CAEzB;;AAIDC,EAAAA,MAAM,GAAG;AACL,UAAMJ,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMI,eAAe,GAAI,KAAKN,KAAL,CAAWM,eAApC;AACA,UAAMH,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAA1B;AACA,UAAMI,aAAa,GAAG,KAAKP,KAAL,CAAWO,aAAjC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsBN,MAAtB,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYK,eAAZ,sBAA6CL,MAA7C,YAA2DC,KAA3D,uBAAmFK,aAAnF,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuBD,eAAvB,WAA6CH,MAA7C,MAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWL,WAAtC;AAAmD,MAAA,QAAQ,EAAE,KAAKH,kBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CANJ,CADJ;AAmBH;;AAvDoC;AA0DzC,eAAeH,SAAf,C,CAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react'\nimport getTicker from '../api.js'\n\nexport class ApiTicker extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ticker: null,\n            price: null,\n            volume: null,\n            tickerInput: ''\n        }\n    }\n\n    handleTickerChange = (e) => {\n        this.setState({\n            tickerInput: e.target.value\n        })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        this.setState(await this.getTicker(this.state.tickerInput))\n    }\n\n\n\n    async componentDidMount() {\n\n    }\n\n\n    \n    render() {\n        const ticker = this.state.ticker\n        const price = this.state.price\n        const lastTradingDate =  this.state.lastTradingDate\n        const volume = this.state.volume\n        const changePercent = this.state.changePercent\n        return (\n            <div className=\"container\">\n                <h1> Current Ticker: {ticker} </h1>\n                <h5> As of {lastTradingDate}, the price of  {ticker} was ${price}, at a change of {changePercent} </h5> \n                <h5> Volume traded on {lastTradingDate} was {volume} </h5> \n\n            \n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Ticker:\n                            <input type=\"text\"  value={this.state.tickerInput} onChange={this.handleTickerChange}/>\n                        </label>\n                        <input type=\"submit\" value=\"submit\" />\n                    </form>\n                </div>\n\n             </div>\n        )\n    }\n}\n\nexport default ApiTicker\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n\n// export class ApiTicker extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ticker: null,\n//             price: null,\n//             volume: null,\n//             tickerInput: ''\n//         }\n//     }\n\n//     handleTickerChange = (e) => {\n//         this.setState({\n//             tickerInput: e.target.value\n//         })\n//     }\n\n//     handleSubmit = async (e) => {\n//         e.preventDefault();\n//         this.setState(await this.getTicker(this.state.tickerInput))\n//     }\n\n\n    \n//     async getTicker(ticker) {\n//         const url = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=' + ticker + '&apikey=TDYHB4DGZLP62GJE&datatype=json'\n//         const result = await fetch(url, {\n//             method: 'GET',\n//             headers: {\n//                 'Accept' : 'application/json',\n//                 'Content-Type':'application/json',\n//             }\n//         })\n//         const data = await result.json()\n//         return {\n//             ticker: data[\"Global Quote\"][\"01. symbol\"],\n//             price: data[\"Global Quote\"][\"05. price\"],\n//             volume: data[\"Global Quote\"][\"06. volume\"],\n//             lastTradingDate: data[\"Global Quote\"][\"07. latest trading day\"],\n//             changePercent: data[\"Global Quote\"][\"10. change percent\"]\n//         }\n//     } \n\n    \n\n//     async componentDidMount() {\n\n//     }\n\n\n    \n//     render() {\n//         const ticker = this.state.ticker\n//         const price = this.state.price\n//         const lastTradingDate =  this.state.lastTradingDate\n//         const volume = this.state.volume\n//         const changePercent = this.state.changePercent\n//         return (\n//             <div className=\"container\">\n//                 <h1> Current Ticker: {ticker} </h1>\n//                 <h5> As of {lastTradingDate}, the price of  {ticker} was ${price}, at a change of {changePercent} </h5> \n//                 <h5> Volume traded on {lastTradingDate} was {volume} </h5> \n\n            \n//                 <div>\n//                     <form onSubmit={this.handleSubmit}>\n//                         <label>\n//                             Ticker:\n//                             <input type=\"text\"  value={this.state.tickerInput} onChange={this.handleTickerChange}/>\n//                         </label>\n//                         <input type=\"submit\" value=\"submit\" />\n//                     </form>\n//                 </div>\n\n//              </div>\n//         )\n//     }\n// }\n\n// export default ApiTicker\n"]},"metadata":{},"sourceType":"module"}