{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport { getTicker } from '../api.js';\nimport './components.css';\nimport testData from '../common_stocks/test.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplayChange = e => {\n      this.setState({\n        currentDisplay: e.target.value\n      });\n    };\n\n    this.autoSearch = () => {\n      console.log(testData);\n    };\n\n    this.onChange = e => {\n      this.autoSearch();\n      this.setState({\n        newTicker: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const newestTicker = await getTicker(this.state.newTicker);\n\n      if (newestTicker[\"ticker\"] === undefined) {\n        alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\");\n      } else {\n        this.setState({\n          tickerList: [...this.state.tickerList, newestTicker],\n          newTicker: ''\n        });\n      }\n    };\n\n    this.onClick = ticker => {\n      return () => this.props.setActiveTicker(ticker);\n    };\n\n    this.state = {\n      newTicker: '',\n      activeTicker: null,\n      currentDisplay: 'price',\n      tickerList: [{\n        'companyName': 'Amazon',\n        'ticker': 'AMZN',\n        'price': '$666',\n        'volume': '1,000,000,000',\n        'changePercent': '+5%'\n      }, {\n        'companyName': 'Facebook',\n        'ticker': 'FB',\n        'price': '$420',\n        'volume': '123,456,789',\n        'changePercent': '-99.99%'\n      }, {\n        'companyName': 'Tesla',\n        'ticker': 'TSLA',\n        'price': '$69',\n        'volume': '420,696,666',\n        'changePercent': '+420%'\n      }]\n    };\n  }\n\n  render() {\n    const tickerList = this.state.tickerList;\n    const tickerMap = tickerList.map(item => {\n      let value = item.price;\n      if (this.state.currentDisplay === \"percentChange\") value = item.changePercent;\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"ticker-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: item.ticker,\n        onClick: this.onClick(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ticker-name float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, \" \", item.ticker, \" \")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }, \"  \", value, \" \"))));\n    });\n    const addTickerForm = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit-form\",\n      type: \"text\",\n      value: this.state.newTicker,\n      placeholder: \"Add Ticker...\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    })));\n    const toggles = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"price\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"percentChange\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \" Percent \"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"ticker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Stocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, tickerMap)), /*#__PURE__*/React.createElement(Container, {\n      className: \"add-ticker-row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, addTickerForm), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, toggles))));\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js"],"names":["React","Component","getTicker","testData","Container","Row","Col","BrowserRouter","Router","Link","Route","Switch","TickerList","constructor","props","handleDisplayChange","e","setState","currentDisplay","target","value","autoSearch","console","log","onChange","newTicker","onSubmit","preventDefault","newestTicker","state","undefined","alert","tickerList","onClick","ticker","setActiveTicker","activeTicker","render","tickerMap","map","item","price","changePercent","addTickerForm","toggles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\nimport testData from '../common_stocks/test.json'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            activeTicker: null,\n            currentDisplay: 'price',\n            tickerList: [\n                {\n                'companyName': 'Amazon',\n                'ticker': 'AMZN',\n                'price': '$666',\n                'volume' : '1,000,000,000',\n                'changePercent': '+5%',\n                }, \n                {\n                'companyName':'Facebook',\n                'ticker':'FB',\n                'price': '$420',\n                'volume' : '123,456,789',\n                'changePercent': '-99.99%',\n                },\n                {\n                'companyName': 'Tesla',\n                'ticker':'TSLA',\n                'price': '$69',\n                'volume' : '420,696,666',\n                'changePercent':'+420%',\n                }\n            ]\n        }\n    }\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n    autoSearch = () => {\n        console.log(testData)\n    }\n\n    onChange = (e) => {\n        this.autoSearch()\n        this.setState({\n            newTicker: e.target.value\n        })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const newestTicker = await getTicker(this.state.newTicker)\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\")\n        } else {\n                this.setState({\n                    tickerList: [...this.state.tickerList, newestTicker],\n                    newTicker: ''\n                })\n        }\n         \n    }\n\n    onClick = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n\n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") value = item.changePercent\n            return  <Container className=\"ticker-row\">\n                        <Row key={item.ticker} onClick={this.onClick(item.ticker)} > \n                            <Col > \n                                <span className=\"ticker-name float-left\"> {item.ticker} </span> \n                            </Col>\n\n                            <Col>\n                                <span className=\"float-right\">  {value} </span> \n                            </Col>\n                        </Row> \n                    </Container>\n        })\n    \n        const addTickerForm =   <div>\n                                        <form onSubmit = {this.onSubmit}> \n                                            <input id=\"submit-form\"type=\"text\" value={this.state.newTicker} placeholder=\"Add Ticker...\" autoComplete=\"off\" onChange={this.onChange} required/> \n                                            {/* <input id=\"submit-btn\" type=\"submit\" value=\"submit\" /> */}\n                                        </form>\n                                </div>\n\n        const toggles = <div> \n                            <button className=\"ticker-btns\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button className=\"ticker-btns\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n\n        return <div className=\"content-container\" id=\"ticker\" >\n            \n                    <h5>Stocks</h5>\n\n                    <div className =\"ticker-map-container\"> \n                        <Container>\n                            {tickerMap} \n                        </Container>\n                    </div>\n\n                    <Container className=\"add-ticker-row d-flex justify-content-center\">\n                        <Row> \n                            <Col> \n                                {addTickerForm}\n                            </Col>\n\n                            <Col> \n                                {toggles}\n                            </Col>\n                        </Row>\n                    </Container>\n\n                </div>\n    }\n}\n\nexport default TickerList\n\n\n"]},"metadata":{},"sourceType":"module"}