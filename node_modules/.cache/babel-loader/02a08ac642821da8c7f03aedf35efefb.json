{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/Graph.js\";\nimport React, { Component } from 'react';\nimport { historicalData } from '../api';\nimport { Line } from 'react-chartjs-2';\nexport class Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = async () => {// const data = await historicalData(this.props.activeTicker)\n      // const parsed = data[\"Time Series (Daily)\"]\n      // const datesArr = Object.values(parsed).map((e) => +e[\"4. close\"])\n      // const oneMonthDataPoints = datesArr.splice(0, 20).reverse()\n      // console.log(oneMonthDataPoints)\n    };\n\n    this.handleClickThirty = async () => {\n      this.setState({\n        graphedDays: 30\n      });\n      const data = await historicalData(this.props.activeTicker);\n    };\n\n    this.handleClickNinety = async () => {\n      this.setState({\n        graphedDays: 90\n      });\n      const data = await historicalData(this.props.activeTicker);\n    };\n\n    this.state = {\n      graphedDays: 30,\n      data: {}\n    };\n  }\n\n  render() {\n    const activeTicker = this.props.activeTicker;\n    const graphedDays = this.state.graphedDays;\n\n    const currentTicker = () => {\n      if (activeTicker === null) {\n        return \"There is currently no active ticker\";\n      } else {\n        return activeTicker + \" 30 day dataset\";\n      }\n    };\n\n    const test = () => {\n      let testData = [];\n\n      for (let i = 0; i <= 30; i++) {\n        testData.push(i);\n      }\n\n      return testData;\n    };\n\n    const test2 = async () => {\n      await historicalData(activeTicker);\n      const data = await historicalData(this.props.activeTicker);\n      const parsed = data[\"Time Series (Daily)\"];\n      const datesArr = Object.values(parsed).map(e => +e[\"4. close\"]);\n      const oneMonthDataPoints = datesArr.splice(0, 20).reverse();\n      console.log(oneMonthDataPoints);\n    };\n\n    const pushNumberOfDays = () => {\n      let labels = [];\n\n      if (graphedDays === 30) {\n        for (let i = 1; i <= 30; i++) {\n          labels.push(i.toString());\n        }\n      } else {\n        for (let i = 1; i <= 90; i++) {\n          labels.push(i.toString());\n        }\n      }\n\n      return labels;\n    };\n\n    const data = {\n      labels: pushNumberOfDays(),\n      datasets: [{\n        label: currentTicker(),\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: test2()\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"active\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickThirty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \" 30 \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickNinety,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \" 90 \"), /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default Graph;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/Graph.js"],"names":["React","Component","historicalData","Line","Graph","constructor","props","handleClick","handleClickThirty","setState","graphedDays","data","activeTicker","handleClickNinety","state","render","currentTicker","test","testData","i","push","test2","parsed","datesArr","Object","values","map","e","oneMonthDataPoints","splice","reverse","console","log","pushNumberOfDays","labels","toString","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { historicalData } from '../api'\nimport { Line } from 'react-chartjs-2'\n\nexport class Graph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            graphedDays: 30,\n            data: {}\n        }\n    }\n\n  \n\n\n\n    handleClick = async () => {\n        // const data = await historicalData(this.props.activeTicker)\n        // const parsed = data[\"Time Series (Daily)\"]\n        // const datesArr = Object.values(parsed).map((e) => +e[\"4. close\"])\n        // const oneMonthDataPoints = datesArr.splice(0, 20).reverse()\n        // console.log(oneMonthDataPoints)\n    }\n\n    handleClickThirty = async () => {\n        this.setState({\n            graphedDays: 30\n        })\n        const data = await historicalData(this.props.activeTicker)\n    }\n\n    handleClickNinety = async () => {\n        this.setState({\n            graphedDays: 90\n        })\n        const data = await historicalData(this.props.activeTicker)\n    }\n\n    \n\n    \n\n    render() {\n\n        const activeTicker = this.props.activeTicker\n        const graphedDays = this.state.graphedDays\n    \n\n        const currentTicker = () => {\n            if(activeTicker === null) {\n                return \"There is currently no active ticker\"\n            } else {\n                return activeTicker + \" 30 day dataset\"\n            }\n        }\n\n        const test = () => {\n            let testData = []\n            for(let i = 0; i <= 30; i++) {\n                testData.push(i)\n            }\n            return testData\n        }\n\n        const test2 = async () => {\n            await historicalData(activeTicker)\n            const data = await historicalData(this.props.activeTicker)\n            const parsed = data[\"Time Series (Daily)\"]\n            const datesArr = Object.values(parsed).map((e) => +e[\"4. close\"])\n            const oneMonthDataPoints = datesArr.splice(0, 20).reverse()\n            console.log(oneMonthDataPoints)\n\n        }\n\n        const pushNumberOfDays = () => {\n            let labels = []\n            if(graphedDays === 30) {\n                for(let i = 1; i <= 30; i++){\n                    labels.push(i.toString())\n                } \n            } else {\n                for(let i = 1; i <= 90; i++) {\n                    labels.push(i.toString())\n                }\n            }\n            return labels;\n        }\n\n    \n\n        const data = {\n            labels: pushNumberOfDays(),\n            datasets: [\n              {\n                label: currentTicker(),\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: test2()\n              }\n            ]\n          };\n\n        return (\n            <div>\n                <button onClick={this.handleClick}>active</button>\n                <button onClick={this.handleClickThirty}> 30 </button>\n                <button onClick={this.handleClickNinety}> 90 </button>\n        \n                <Line data={data} />\n            </div>\n        )\n    }\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}