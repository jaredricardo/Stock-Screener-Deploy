{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js\";\nimport React, { Component } from 'react';\nimport { newsAPI } from '../api';\nimport { removeTypeDuplicates, numericLiteral } from '@babel/types';\nimport './components.css';\nexport class NewsAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLinks = async () => {\n      if (this.props.activeTicker === null) return;\n\n      if (this.props.activeTicker) {\n        const data = await newsAPI(this.props.activeTicker);\n        const articleDict = {};\n        data.articles.forEach(article => {\n          articleDict[article.urlToImage] = {\n            title: article.title,\n            url: article.url,\n            imgURL: article.urlToImage,\n            publishDate: article.publishedAt.slice(0, 10)\n          };\n        });\n        const numbOfArticles = 5;\n        this.setState({\n          newsList: Object.values(articleDict).slice(0, numbOfArticles)\n        });\n      }\n    };\n\n    this.state = {\n      newsList: []\n    };\n  }\n\n  async componentDidMount() {\n    this.updateLinks();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.activeTicker !== this.props.activeTicker) {\n      this.updateLinks();\n    }\n  }\n\n  render() {\n    const newsList = this.state.newsList;\n    const newsListMap = newsList.map(item => {\n      const img = /*#__PURE__*/React.createElement(\"img\", {\n        src: item.imgURL,\n        height: \"50\",\n        width: \"50\",\n        style: {\n          objectFit: \"cover\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      });\n      const format = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url,\n        target: \"_blank\",\n        key: item.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, \" \", item.title, \" published on \", item.publishDate, \" \", img, \" \")));\n      return format;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \" News \"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, newsListMap));\n  }\n\n}\nexport default NewsAPI; // api key : 7339cb8efbde43e7b74b3a32535367a7\n//old news API parsing \n// updateLinks = async () => {\n//     if(this.state.newsList === null) return\n//     if(this.props.activeTicker) {\n//         const data = await newsAPI(this.props.activeTicker)\n//         let newsList = []\n//         let j = 5 // number of news articles rendered \n//         for(let i = 0; i < j; i++) {\n//             let article = {\n//                 title: data[\"articles\"][i][\"title\"],\n//                 url: data[\"articles\"][i][\"url\"],\n//                 imgURL: data[\"articles\"][i][\"urlToImage\"],\n//                 publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n//             }\n//             newsList.push(article)\n//         }\n//         this.setState({\n//             newsList: newsList\n//         })\n//     }\n// }","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js"],"names":["React","Component","newsAPI","removeTypeDuplicates","numericLiteral","NewsAPI","constructor","props","updateLinks","activeTicker","data","articleDict","articles","forEach","article","urlToImage","title","url","imgURL","publishDate","publishedAt","slice","numbOfArticles","setState","newsList","Object","values","state","componentDidMount","componentDidUpdate","prevProps","render","newsListMap","map","item","img","objectFit","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { newsAPI } from '../api'\nimport { removeTypeDuplicates, numericLiteral } from '@babel/types'\nimport './components.css'\n\nexport class NewsAPI extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            newsList:[]\n        }\n    }\n\n\n    async componentDidMount() {\n        this.updateLinks()\n    }\n\n    updateLinks = async () => {\n        if(this.props.activeTicker === null) return\n        if(this.props.activeTicker) {\n            const data = await newsAPI(this.props.activeTicker)\n            const articleDict = {}\n            data.articles.forEach((article) => {\n                articleDict[article.urlToImage] = {\n                    title: article.title,\n                    url: article.url,\n                    imgURL: article.urlToImage,\n                    publishDate: article.publishedAt.slice(0, 10)\n                }\n            })\n\n            const numbOfArticles = 5\n\n            this.setState({\n                newsList: Object.values(articleDict).slice(0, numbOfArticles)\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.activeTicker !== this.props.activeTicker){\n            this.updateLinks()\n        }\n    }\n\n\n    render() {\n\n        const newsList = this.state.newsList\n\n       \n\n        const newsListMap = newsList.map((item) => {\n            const img = <img src={item.imgURL} height=\"50\" width=\"50\" style={{objectFit:\"cover\"}} />\n\n            const format =  \n                            <div> \n                            <a href={item.url} target=\"_blank\" key ={item.url}>   \n                                <div> {item.title} published on {item.publishDate} {img} </div> \n                            </a>\n                            </div>\n            \n            return format \n        })\n\n\n        return (\n            <div className=\"content-container\" id=\"news\">\n\n            <h5> News </h5>\n\n                <ul>\n                     {newsListMap}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default NewsAPI\n\n\n\n// api key : 7339cb8efbde43e7b74b3a32535367a7\n\n\n\n//old news API parsing \n\n// updateLinks = async () => {\n//     if(this.state.newsList === null) return\n//     if(this.props.activeTicker) {\n//         const data = await newsAPI(this.props.activeTicker)\n//         let newsList = []\n//         let j = 5 // number of news articles rendered \n//         for(let i = 0; i < j; i++) {\n//             let article = {\n//                 title: data[\"articles\"][i][\"title\"],\n//                 url: data[\"articles\"][i][\"url\"],\n//                 imgURL: data[\"articles\"][i][\"urlToImage\"],\n//                 publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n//             }\n//             newsList.push(article)\n//         }\n//         this.setState({\n//             newsList: newsList\n//         })\n//     }\n\n// }"]},"metadata":{},"sourceType":"module"}