{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport TickerToggler from './TickerToggler';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTicker: false,\n      currentDisplay: 'price'\n    };\n  }\n\n  render() {\n    let tickerList = [{\n      'companyName': 'Amazon',\n      'ticker': 'AMZN',\n      'price': '$666',\n      'volume': '1,000,000,000',\n      'percentChange': '+5%',\n      active: false\n    }, {\n      'companyName': 'Facebook',\n      'ticker': 'FB',\n      'price': '$420',\n      'volume': '123,456,789',\n      'percentChange': '-99.99%',\n      active: false\n    }, {\n      'companyName': 'Tesla',\n      'ticker': 'TSLA',\n      'price': '$69',\n      'volume': '420,696,666',\n      'percentChange': '+420%',\n      active: false\n    }];\n    const tickerMapPrice = tickerList.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \" \", item.ticker, \" \", item.price, \" \"));\n    const tickerMapPercentChange = tickerList.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \" \", item.ticker, \" \", item.percentChange, \" \"));\n\n    if (this.state.currentDisplay === 'price') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }\n      }, \" \", tickerMapPrice, \" \");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      }, \" \", tickerMapPercentChange, \" \");\n    } // return (\n    //     <div>\n    //         {tickerMap}\n    //         <TickerToggler currentDisplay = {this.state.displayOptions} />\n    //     </div>\n    // )\n\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js"],"names":["React","Component","TickerToggler","TickerList","constructor","props","state","activeTicker","currentDisplay","render","tickerList","active","tickerMapPrice","map","item","ticker","price","tickerMapPercentChange","percentChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AAETC,MAAAA,cAAc,EAAE;AAFP,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,CACb;AACA,qBAAe,QADf;AAEA,gBAAS,MAFT;AAGA,eAAS,MAHT;AAIA,gBAAW,eAJX;AAKA,uBAAiB,KALjB;AAMAC,MAAAA,MAAM,EAAE;AANR,KADa,EASb;AACA,qBAAc,UADd;AAEA,gBAAS,IAFT;AAGA,eAAS,MAHT;AAIA,gBAAW,aAJX;AAKA,uBAAiB,SALjB;AAMAA,MAAAA,MAAM,EAAE;AANR,KATa,EAiBb;AACA,qBAAe,OADf;AAEA,gBAAS,MAFT;AAGA,eAAS,KAHT;AAIA,gBAAW,aAJX;AAKA,uBAAgB,OALhB;AAMAA,MAAAA,MAAM,EAAE;AANR,KAjBa,CAAjB;AA2BA,UAAMC,cAAc,GAAGF,UAAU,CAACG,GAAX,CAAgBC,IAAD,iBAClC;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwBD,IAAI,CAACC,MAA7B,OAAsCD,IAAI,CAACE,KAA3C,MADmB,CAAvB;AAGA,UAAMC,sBAAsB,GAAGP,UAAU,CAACG,GAAX,CAAgBC,IAAD,iBAC1C;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwBD,IAAI,CAACC,MAA7B,OAAsCD,IAAI,CAACI,aAA3C,MAD2B,CAA/B;;AAMA,QAAI,KAAKZ,KAAL,CAAWE,cAAX,KAA8B,OAAlC,EAA2C;AACvC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOI,cAAP,MAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOK,sBAAP,MAAP;AACH,KA1CI,CAgDL;AACA;AACA;AACA;AACA;AACA;;AACH;;AAhE8B;;AAmEnC,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport TickerToggler from './TickerToggler'\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            activeTicker: false,\n            currentDisplay: 'price'\n        }\n    }\n    \n    render() {\n        \n        let tickerList = [\n            {\n            'companyName': 'Amazon',\n            'ticker':'AMZN',\n            'price': '$666',\n            'volume' : '1,000,000,000',\n            'percentChange': '+5%',\n            active: false\n            }, \n            {\n            'companyName':'Facebook',\n            'ticker':'FB',\n            'price': '$420',\n            'volume' : '123,456,789',\n            'percentChange': '-99.99%',\n            active: false\n            },\n            {\n            'companyName': 'Tesla',\n            'ticker':'TSLA',\n            'price': '$69',\n            'volume' : '420,696,666',\n            'percentChange':'+420%',\n            active: false\n            }\n        ]\n\n        const tickerMapPrice = tickerList.map((item) => \n            <li key={item.ticker}> {item.ticker} {item.price} </li> \n        )\n        const tickerMapPercentChange = tickerList.map((item) => \n            <li key={item.ticker}> {item.ticker} {item.percentChange} </li> \n        )\n\n\n\n        if (this.state.currentDisplay === 'price') {\n            return <div> {tickerMapPrice} </div>\n        } else {\n            return <div> {tickerMapPercentChange} </div>\n        }\n\n \n   \n\n\n        // return (\n        //     <div>\n        //         {tickerMap}\n        //         <TickerToggler currentDisplay = {this.state.displayOptions} />\n        //     </div>\n        // )\n    }\n}\n\nexport default TickerList\n\n\n"]},"metadata":{},"sourceType":"module"}