{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport { getTicker } from '../api.js';\nimport './components.css';\nimport testData from '../common_stocks/test.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { BrowserRouter as Router, Link, Route, Switch, useParams } from 'react-router-dom';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplayChange = e => {\n      this.setState({\n        currentDisplay: e.target.value\n      });\n    };\n\n    this.autoSearch = () => {// console.log(testData)\n    };\n\n    this.onChange = e => {\n      // this.autoSearch()\n      this.setState({\n        newTicker: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const newestTicker = await getTicker(this.state.newTicker);\n\n      if (newestTicker[\"ticker\"] === undefined) {\n        alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\");\n      } else {\n        this.setState({\n          tickerList: [...this.state.tickerList, newestTicker],\n          newTicker: ''\n        });\n        localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList));\n      }\n    };\n\n    this.onClick = ticker => {\n      return () => this.props.setActiveTicker(ticker);\n    };\n\n    this.state = {\n      newTicker: '',\n      currentDisplay: 'price',\n      tickerList: []\n    };\n  }\n\n  componentDidMount() {\n    const localtickerList = localStorage.getItem('localTickers');\n    const localtickerListObj = JSON.parse(localtickerList);\n    console.log(localtickerListObj);\n    this.setState({\n      tickerList: localtickerListObj\n    });\n  }\n\n  render() {\n    const tickerList = this.state.tickerList;\n    const tickerMap = tickerList.map(item => {\n      let value = item.price;\n\n      if (this.state.currentDisplay === \"percentChange\") {\n        value = Math.sign(item.changePercent.slice(0, item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent;\n      }\n\n      return /*#__PURE__*/React.createElement(Link, {\n        to: `/${item.ticker}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"ticker-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: item.ticker,\n        onClick: this.onClick(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ticker-name float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }, \" \", item.ticker, \" \")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, \"  \", value, \" \")))));\n    });\n    const addTickerForm = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit-form\",\n      type: \"text\",\n      value: this.state.newTicker,\n      placeholder: \"Add Ticker...\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    })));\n    const toggles = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"price\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"percentChange\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \" Percent \"));\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"ticker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Stocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, tickerMap)), /*#__PURE__*/React.createElement(Container, {\n      className: \"add-ticker-row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, addTickerForm), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, toggles)))));\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js"],"names":["React","Component","getTicker","testData","Container","Row","Col","BrowserRouter","Router","Link","Route","Switch","useParams","TickerList","constructor","props","handleDisplayChange","e","setState","currentDisplay","target","value","autoSearch","onChange","newTicker","onSubmit","preventDefault","newestTicker","state","undefined","alert","tickerList","localStorage","setItem","JSON","stringify","onClick","ticker","setActiveTicker","componentDidMount","localtickerList","getItem","localtickerListObj","parse","console","log","render","tickerMap","map","item","price","Math","sign","changePercent","slice","length","addTickerForm","toggles"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,SAAvD,QAA2E,kBAA3E;;AAGA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAC/Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,mBAtBmB,GAsBGC,CAAC,IAAI;AACvB,WAAKC,QAAL,CAAc;AACVC,QAAAA,cAAc,EAAEF,CAAC,CAACG,MAAF,CAASC;AADf,OAAd;AAGH,KA1BkB;;AAAA,SA4BnBC,UA5BmB,GA4BN,MAAM,CACf;AACH,KA9BkB;;AAAA,SAgCnBC,QAhCmB,GAgCPN,CAAD,IAAO;AACd;AACA,WAAKC,QAAL,CAAc;AACVM,QAAAA,SAAS,EAAEP,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGH,KArCkB;;AAAA,SAuCnBI,QAvCmB,GAuCR,MAAOR,CAAP,IAAa;AACpBA,MAAAA,CAAC,CAACS,cAAF;AACA,YAAMC,YAAY,GAAG,MAAMzB,SAAS,CAAC,KAAK0B,KAAL,CAAWJ,SAAZ,CAApC;;AACA,UAAGG,YAAY,CAAC,QAAD,CAAZ,KAA2BE,SAA9B,EAAyC;AACrCC,QAAAA,KAAK,CAAC,gGAAD,CAAL;AACH,OAFD,MAEO;AACC,aAAKZ,QAAL,CAAc;AACVa,UAAAA,UAAU,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,UAAf,EAA2BJ,YAA3B,CADF;AAEVH,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIAQ,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKP,KAAL,CAAWG,UAA1B,CAArC;AACH;AACR,KAnDkB;;AAAA,SAsDnBK,OAtDmB,GAsDRC,MAAD,IAAY;AAClB,aAAO,MAAM,KAAKtB,KAAL,CAAWuB,eAAX,CAA2BD,MAA3B,CAAb;AACH,KAxDkB;;AAGf,SAAKT,KAAL,GAAa;AACTJ,MAAAA,SAAS,EAAE,EADF;AAETL,MAAAA,cAAc,EAAE,OAFP;AAGTY,MAAAA,UAAU,EAAE;AAHH,KAAb;AAOH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,eAAe,GAAGR,YAAY,CAACS,OAAb,CAAqB,cAArB,CAAxB;AACA,UAAMC,kBAAkB,GAAGR,IAAI,CAACS,KAAL,CAAWH,eAAX,CAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACA,SAAKxB,QAAL,CAAc;AACVa,MAAAA,UAAU,EAAEW;AADF,KAAd;AAGC;;AAwCLI,EAAAA,MAAM,GAAG;AAEL,UAAMf,UAAU,GAAG,KAAKH,KAAL,CAAWG,UAA9B;AAGA,UAAMgB,SAAS,GAAGhB,UAAU,CAACiB,GAAX,CAAgBC,IAAD,IAAU;AACvC,UAAI5B,KAAK,GAAG4B,IAAI,CAACC,KAAjB;;AACA,UAAG,KAAKtB,KAAL,CAAWT,cAAX,KAA8B,eAAjC,EAAkD;AAC9CE,QAAAA,KAAK,GAAG8B,IAAI,CAACC,IAAL,CAAUH,IAAI,CAACI,aAAL,CAAmBC,KAAnB,CAAyB,CAAzB,EAA2BL,IAAI,CAACI,aAAL,CAAmBE,MAAnB,GAA4B,CAAvD,CAAV,MAAyE,CAAzE,GAA6E,MAAMN,IAAI,CAACI,aAAxF,GAAwGJ,IAAI,CAACI,aAArH;AACH;;AACD,0BAAQ,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,IAAGJ,IAAI,CAACZ,MAAO,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEY,IAAI,CAACZ,MAAf;AAAuB,QAAA,OAAO,EAAE,KAAKD,OAAL,CAAaa,IAAI,CAACZ,MAAlB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2CY,IAAI,CAACZ,MAAhD,MADJ,CADJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiChB,KAAjC,MADJ,CALJ,CADJ,CADJ,CAAR;AAaH,KAlBiB,CAAlB;AAoBA,UAAMmC,aAAa,gBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAM,MAAA,QAAQ,EAAI,KAAK/B,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWJ,SAArD;AAAgE,MAAA,WAAW,EAAC,eAA5E;AAA4F,MAAA,YAAY,EAAC,KAAzG;AAA+G,MAAA,QAAQ,EAAE,KAAKD,QAA9H;AAAwI,MAAA,QAAQ,MAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,CAAxB;AAOA,UAAMkC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAA8C,MAAA,OAAO,EAAE,KAAKzC,mBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,KAAK,EAAC,eAAtC;AAAsD,MAAA,OAAO,EAAE,KAAKA,mBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAAhB;AAMA,wBAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,EAAE,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,MAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK+B,SADL,CADJ,CAHJ,eASI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,8CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,aADL,CADJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,OADL,CALJ,CADJ,CATJ,CADJ,CAAR;AAuBH;;AAzH8B;;AA4HnC,eAAe5C,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\nimport testData from '../common_stocks/test.json'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { BrowserRouter as Router, Link, Route, Switch, useParams    } from 'react-router-dom';\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            currentDisplay: 'price',\n            tickerList: [\n               \n            ]\n        }\n    }\n\n    componentDidMount() {\n        const localtickerList = localStorage.getItem('localTickers')\n        const localtickerListObj = JSON.parse(localtickerList)\n        console.log(localtickerListObj)\n        this.setState({\n            tickerList: localtickerListObj\n        })\n        }\n\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n    autoSearch = () => {\n        // console.log(testData)\n    }\n\n    onChange = (e) => {\n        // this.autoSearch()\n        this.setState({\n            newTicker: e.target.value\n        })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const newestTicker = await getTicker(this.state.newTicker)\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\")\n        } else {\n                this.setState({\n                    tickerList: [...this.state.tickerList, newestTicker],\n                    newTicker: ''\n                })\n                localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList))\n            }\n    }\n\n\n    onClick = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n       \n\n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") {\n                value = Math.sign(item.changePercent.slice(0,item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent   \n            }\n            return  <Link to={`/${item.ticker}`}> \n                        <Container className=\"ticker-row\">\n                            <Row key={item.ticker} onClick={this.onClick(item.ticker)} > \n                                <Col > \n                                    <span className=\"ticker-name float-left\"> {item.ticker} </span> \n                                </Col>\n\n                                <Col>\n                                    <span className=\"float-right\">  {value} </span> \n                                </Col>\n                            </Row> \n                        </Container>\n                    </Link>\n        })\n    \n        const addTickerForm =   <div>\n                                        <form onSubmit = {this.onSubmit}> \n                                            <input id=\"submit-form\"type=\"text\" value={this.state.newTicker} placeholder=\"Add Ticker...\" autoComplete=\"off\" onChange={this.onChange} required/> \n                                            {/* <input id=\"submit-btn\" type=\"submit\" value=\"submit\" /> */}\n                                        </form>\n                                </div>\n\n        const toggles = <div> \n                            <button className=\"ticker-btns\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button className=\"ticker-btns\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n\n        return  <Router > \n                    <div className=\"content-container\" id=\"ticker\" >\n                        <h5>Stocks</h5>\n\n                        <div className =\"ticker-map-container\"> \n                            <Container>\n                                {tickerMap} \n                            </Container>\n                        </div>\n\n                        <Container className=\"add-ticker-row d-flex justify-content-center\">\n                            <Row> \n                                <Col> \n                                    {addTickerForm}\n                                </Col>\n\n                                <Col> \n                                    {toggles}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </Router>\n    }\n}\n\nexport default TickerList"]},"metadata":{},"sourceType":"module"}