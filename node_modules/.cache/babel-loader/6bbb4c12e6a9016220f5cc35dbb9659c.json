{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/Graph.js\";\nimport React, { Component } from 'react';\nimport { dailyData } from '../api';\nimport { historicalDataThirty } from '../api';\nimport { historicalDataNinety } from '../api';\nimport { Line } from 'react-chartjs-2';\n\nfunction newChartConfig(labels, data, activeTicker, graphedDaysFunc) {\n  return {\n    labels: labels,\n    datasets: [{\n      label: graphedDaysFunc,\n      fill: false,\n      lineTension: 0,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: data\n    }]\n  };\n}\n\nexport class Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTestClick = async () => {};\n\n    this.handleClickDaily = async () => {\n      this.setState({\n        graphedDays: 1,\n        dataPointsNeeded: 100\n      });\n    };\n\n    this.handleClickThirty = async () => {\n      this.setState({\n        graphedDays: 30,\n        dataPointsNeeded: 90\n      });\n    };\n\n    this.handleClickNinety = async () => {\n      this.setState({\n        graphedDays: 90,\n        dataPointsNeeded: 90\n      });\n    };\n\n    this.updateData = async refresh => {\n      if (this.props.activeTicker === null) return; // same as return null \n\n      if (this.state.graphedDays === 1) {\n        if (this.state.dailyXData !== null && !refresh) return;\n        const data = await dailyData(this.props.activeTicker);\n        const parsed = data[\"Time Series (5min)\"];\n        const yAxisArr = Object.values(parsed).map(e => +e[\"3. low\"]);\n        const dailyDataArr = yAxisArr.splice(0, yAxisArr.length).reverse();\n        const dailyxAxisData = Object.keys(parsed).map(e => e.slice(10, parsed.length)).splice(0, 100).reverse();\n        this.setState({\n          dailyYData: dailyDataArr,\n          dailyXData: dailyxAxisData\n        });\n      } else if (this.state.graphedDays === 30) {\n        if (this.state.monthlyXData !== null && !refresh) return;\n        const data = await historicalDataThirty(this.props.activeTicker);\n        const parsed = data[\"Time Series (Daily)\"];\n        const yAxisArr = Object.values(parsed).map(e => +e[\"4. close\"]);\n        const oneMonthDataPoints = yAxisArr.splice(0, 30).reverse();\n        const monthlyxAxisData = Object.keys(parsed).map(e => e.slice(5, parsed.length)).splice(0, 30).reverse();\n        this.setState({\n          monthlyYData: oneMonthDataPoints,\n          monthlyXData: monthlyxAxisData\n        });\n      } else if (this.state.graphedDays === 90) {\n        if (this.state.threeMonthXData !== null && !refresh) return;\n        const data = await historicalDataNinety(this.props.activeTicker);\n        const parsed = data[\"Time Series (Daily)\"];\n        const yAxisArr = Object.values(parsed).map(e => +e[\"4. close\"]);\n        const threeMonthDataPoints = yAxisArr.splice(0, 90).reverse();\n        const threeMonthxAxisData = Object.keys(parsed).map(e => e.slice(5, parsed.length)).splice(0, 90).reverse();\n        this.setState({\n          threeMonthYData: threeMonthDataPoints,\n          threeMonthXData: threeMonthxAxisData\n        });\n      }\n    };\n\n    this.state = {\n      graphedDays: null,\n      dataPointsNeeded: null,\n      dailyXData: null,\n      monthlyXData: null,\n      threeMonthXData: null,\n      dailyYData: null,\n      monthlyYData: null,\n      threeMonthYData: null\n    };\n  }\n\n  async componentDidMount() {\n    this.updateData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps.activeTicker !== this.props.activeTicker || prevState.graphedDays !== this.state.graphedDays) {\n      this.updateData(prevProps.activeTicker !== this.props.activeTicker);\n    }\n  }\n\n  render() {\n    const activeTicker = this.props.activeTicker;\n    let X = this.state.dailyXData;\n    let Y = this.state.dailyYData;\n\n    if (this.state.graphedDays === 30) {\n      X = this.state.monthlyXData;\n      Y = this.state.monthlyYData;\n    } else if (this.state.graphedDays === 90) {\n      X = this.state.threeMonthXData;\n      Y = this.state.threeMonthYData;\n    }\n\n    const graphLabel = () => {\n      if (this.state.graphedDays === null) {\n        return \"No active ticker\";\n      } else {\n        return activeTicker + ' ' + this.state.graphedDays + ' day graph';\n      }\n    };\n\n    const config = newChartConfig(X, Y, activeTicker, graphLabel());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"ratios\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"FINANCIAL DATA: \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleTestClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"test\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickDaily,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"1 day\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickThirty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \" 30 day \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickNinety,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \" 90 day\"), /*#__PURE__*/React.createElement(Line, {\n      data: config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default Graph;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/Graph.js"],"names":["React","Component","dailyData","historicalDataThirty","historicalDataNinety","Line","newChartConfig","labels","data","activeTicker","graphedDaysFunc","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Graph","constructor","props","handleTestClick","handleClickDaily","setState","graphedDays","dataPointsNeeded","handleClickThirty","handleClickNinety","updateData","refresh","state","dailyXData","parsed","yAxisArr","Object","values","map","e","dailyDataArr","splice","length","reverse","dailyxAxisData","keys","slice","dailyYData","monthlyXData","oneMonthDataPoints","monthlyxAxisData","monthlyYData","threeMonthXData","threeMonthDataPoints","threeMonthxAxisData","threeMonthYData","componentDidMount","componentDidUpdate","prevProps","prevState","render","X","Y","graphLabel","config"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { dailyData } from '../api'\nimport { historicalDataThirty } from '../api'\nimport { historicalDataNinety} from '../api'\nimport { Line } from 'react-chartjs-2'\n\nfunction newChartConfig(labels, data, activeTicker, graphedDaysFunc) {\n    return {\n        labels: labels, \n        datasets: [\n          {\n            label: graphedDaysFunc,\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: data\n          }\n        ]\n    }\n}\n\nexport class Graph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            graphedDays: null,\n            dataPointsNeeded: null,\n            dailyXData: null,\n            monthlyXData: null,\n            threeMonthXData: null,\n            dailyYData: null,\n            monthlyYData: null,\n            threeMonthYData: null\n        }\n    }\n\n    handleTestClick = async () => {\n\n    }\n\n    handleClickDaily = async () => {\n        this.setState({\n            graphedDays:1,\n            dataPointsNeeded: 100 \n        })\n    }\n\n    handleClickThirty = async () => {\n        this.setState({\n            graphedDays: 30,\n            dataPointsNeeded: 90\n        })\n    }\n\n    handleClickNinety = async () => {\n        this.setState({\n            graphedDays: 90 ,\n            dataPointsNeeded: 90\n        })\n    }\n\n    updateData = async (refresh) => {\n        if (this.props.activeTicker === null) return // same as return null \n        if(this.state.graphedDays === 1 ) {\n\n            if(this.state.dailyXData !== null && !refresh) return \n\n            const data = await dailyData(this.props.activeTicker)\n            const parsed = data[\"Time Series (5min)\"]\n            const yAxisArr = Object.values(parsed).map((e) => +e[\"3. low\"])\n            const dailyDataArr = yAxisArr.splice(0, yAxisArr.length).reverse()\n            const dailyxAxisData = Object.keys(parsed).map(e => e.slice(10, parsed.length)).splice(0,100).reverse()\n\n            this.setState({\n                dailyYData:dailyDataArr,\n                dailyXData: dailyxAxisData                \n            })\n        } else if (this.state.graphedDays === 30) {\n\n            if(this.state.monthlyXData !== null && !refresh) return \n\n            const data = await historicalDataThirty(this.props.activeTicker)\n            const parsed = data[\"Time Series (Daily)\"]\n            const yAxisArr = Object.values(parsed).map((e) => +e[\"4. close\"])\n            const oneMonthDataPoints = yAxisArr.splice(0, 30).reverse()\n            const monthlyxAxisData = Object.keys(parsed).map(e => e.slice(5, parsed.length)).splice(0, 30).reverse()\n\n            this.setState({\n                monthlyYData: oneMonthDataPoints,\n                monthlyXData: monthlyxAxisData\n            })\n        } else if (this.state.graphedDays === 90) {\n\n            if(this.state.threeMonthXData !== null && !refresh) return \n\n            const data = await historicalDataNinety(this.props.activeTicker)\n            const parsed = data[\"Time Series (Daily)\"]\n            const yAxisArr = Object.values(parsed).map((e) => +e[\"4. close\"])\n            const threeMonthDataPoints = yAxisArr.splice(0, 90).reverse()\n            const threeMonthxAxisData = Object.keys(parsed).map(e => e.slice(5, parsed.length)).splice(0, 90).reverse()\n\n            this.setState({\n                threeMonthYData: threeMonthDataPoints,\n                threeMonthXData: threeMonthxAxisData\n            })\n        }\n    }\n\n    async componentDidMount() {\n        this.updateData()\n    }\n    \n    async componentDidUpdate(prevProps, prevState) {\n        if (prevProps.activeTicker !== this.props.activeTicker || \n            prevState.graphedDays !== this.state.graphedDays) {\n            this.updateData(prevProps.activeTicker !== this.props.activeTicker)\n        }\n    }\n\n    render() {\n\n        const activeTicker = this.props.activeTicker\n        let X = this.state.dailyXData\n        let Y = this.state.dailyYData\n\n        if(this.state.graphedDays === 30) {\n            X = this.state.monthlyXData\n            Y = this.state.monthlyYData\n        } else if ( this.state.graphedDays === 90) {\n            X = this.state.threeMonthXData\n            Y = this.state.threeMonthYData\n        }\n         \n\n        const graphLabel = () => {\n            if(this.state.graphedDays === null) {\n                return \"No active ticker\"\n            } else {\n                return activeTicker + ' ' + this.state.graphedDays + ' day graph'\n            }\n        }\n       \n       \n        const config = newChartConfig(X, Y, activeTicker, graphLabel())\n\n        return (\n            <div className=\"content-container\" id=\"ratios\">\n                <header>FINANCIAL DATA: </header>\n                <button onClick={this.handleTestClick}>test</button>\n                <button onClick={this.handleClickDaily}>1 day</button>\n                <button onClick={this.handleClickThirty}> 30 day </button>\n                <button onClick={this.handleClickNinety}> 90 day</button>\n        \n                <Line data={config} />\n            </div>\n        )\n    }\n}\n\nexport default Graph"]},"metadata":{},"sourceType":"module"}