{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jaredricardo/Desktop/apps/stock screener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{getTicker}from'../api.js';import'./components.css';import{createNode,add,suggest}from'./trie';import tickerData from'../common_stocks/aggregate.json';import'bootstrap/dist/css/bootstrap.min.css';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import{cleanup}from'@testing-library/react';var TickerList=/*#__PURE__*/function(_Component){_inherits(TickerList,_Component);var _super=_createSuper(TickerList);function TickerList(props){var _this;_classCallCheck(this,TickerList);_this=_super.call(this,props);_this.handleDisplayChange=function(e){_this.setState({currentDisplay:e.target.value});};_this.onChange=function(e){// CREATE TICKER ARRAY FROM JSON DATA\nvar tickerArr=[];var _iterator=_createForOfIteratorHelper(tickerData),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _ticker=_step.value;tickerArr.push(_ticker[\"Symbol\"]);}// const tickerDataDict = {}\n// tickerData.forEach((company) => {\n//     tickerDataDict[company[\"Symbol\"]] = {\n//         symbol: company['Symbol'],\n//         name: company['Name']\n//     }\n// })\n// Commented out above is a working dictionary of ticker items. Decided to to just render simple array for trie  \n// INSTANTIATE ROOT AND POPULATE TRIE TREE\n}catch(err){_iterator.e(err);}finally{_iterator.f();}var root=new createNode(null);for(var _i=0,_tickerArr=tickerArr;_i<_tickerArr.length;_i++){var ticker=_tickerArr[_i];add(ticker,0,root);}//  CALL SUGGEST() ON INPUT VALUE AND SET SUGGESTION STATE FOR JSX MAP / RENDER\nvar str=e.target.value.toUpperCase();var suggestions=suggest(str,0,root);_this.setState({newTicker:e.target.value,suggestions:suggestions.slice(0,10)});// RESET SUGGESTION ARRAY\nif(str.length===0){_this.setState({suggestions:''});}};_this.onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newestTicker,tickerList,containsTicker;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return getTicker(_this.state.newTicker);case 3:newestTicker=_context.sent;tickerList=Object.entries(_this.state.tickerList);containsTicker=function containsTicker(submittedTicker){for(var i=0;i<tickerList.length;i++){if(tickerList[i][1][\"ticker\"]===submittedTicker){return true;}}return false;};// I should consider making use of forEach in containsTicker instead of a for loop.\n// I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \nif(newestTicker[\"ticker\"]===undefined){alert(\"Please enter a valid ticker\");}else if(containsTicker(newestTicker[\"ticker\"])){alert(\"That ticker is already in your list\");}else{_this.setState({tickerList:[].concat(_toConsumableArray(_this.state.tickerList),[newestTicker]),suggestions:'',newTicker:''});localStorage.setItem('localTickers',JSON.stringify(_this.state.tickerList));}case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.suggestionSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var clickedSuggestion,newestTicker,tickerList,containsTickerv2;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:clickedSuggestion=e.target.textContent;_context2.next=3;return getTicker(clickedSuggestion);case 3:newestTicker=_context2.sent;tickerList=_this.state.tickerList;containsTickerv2=function containsTickerv2(submittedTicker){for(var i=0;i<tickerList.length;i++){if(tickerList[i][\"ticker\"]===clickedSuggestion){return true;}}return false;};if(clickedSuggestion===undefined){alert(\"Please enter a valid ticker\");}else if(containsTickerv2(clickedSuggestion)){alert(\"That ticker is already in your list\");}else{_this.setState({tickerList:[].concat(_toConsumableArray(_this.state.tickerList),[newestTicker]),suggestions:'',newTicker:''});localStorage.setItem('localTickers',JSON.stringify(_this.state.tickerList));}case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.setActive=function(ticker){return function(){return _this.props.setActiveTicker(ticker);};};_this.removeTicker=function(itemToBeRemoved){return function(){var newState=[];function iterate(prevState){for(var i=0;i<prevState.length;i++){if(prevState[i][\"ticker\"]!==itemToBeRemoved){newState.push(prevState[i]);}}return newState;}iterate(_this.state.tickerList);_this.setState({tickerList:newState});localStorage.setItem('localTickers',JSON.stringify(newState));};};_this.state={newTicker:'',currentDisplay:'price',tickerList:[],suggestions:[]};return _this;}_createClass(TickerList,[{key:\"componentDidMount\",value:function componentDidMount(){var localtickerList=localStorage.getItem('localTickers');var localtickerListObj=JSON.parse(localtickerList);if(localtickerListObj){this.setState({tickerList:localtickerListObj});}else return;}},{key:\"render\",value:function render(){var _this2=this;var tickerList=this.state.tickerList;var suggestions=this.state.suggestions;var suggestionMap=suggestions===''?null:suggestions.map(function(suggestion){return/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion-row-item\",key:suggestion,value:suggestion,onClick:_this2.suggestionSubmit},suggestion);});var tickerMap=tickerList.map(function(item){var value=item.price;if(_this2.state.currentDisplay===\"percentChange\"){value=Math.sign(item.changePercent.slice(0,item.changePercent.length-1))===1?'+'+item.changePercent:item.changePercent;}return/*#__PURE__*/React.createElement(Container,{key:item.ticker},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"ticker-row\",onClick:_this2.setActive(item.ticker)},/*#__PURE__*/React.createElement(\"span\",{className:\"ticker-name float-left\"},\" \",item.ticker,\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"float-right\"},\"  \",value,\" \")),/*#__PURE__*/React.createElement(Col,{xs:1},/*#__PURE__*/React.createElement(\"button\",{className:\"remove-ticker-btns\",onClick:_this2.removeTicker(item.ticker)},\"x\"))));});var addTickerForm=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"input\",{id:\"submit-form\",type:\"text\",value:this.state.newTicker,placeholder:\"Add Ticker...\",autoComplete:\"off\",onChange:this.onChange,required:true})));var toggles=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"ticker-btns\",value:\"price\",onClick:this.handleDisplayChange},\" Price \"),/*#__PURE__*/React.createElement(\"button\",{className:\"ticker-btns\",value:\"percentChange\",onClick:this.handleDisplayChange},\" Percent \"));return/*#__PURE__*/React.createElement(\"div\",{className:\"content-container\",id:\"ticker\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Stocks\"),/*#__PURE__*/React.createElement(\"div\",{className:\"ticker-map-container\"},/*#__PURE__*/React.createElement(Container,null,tickerMap)),/*#__PURE__*/React.createElement(Container,{className:\"add-ticker-row d-flex justify-content-center\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,addTickerForm,/*#__PURE__*/React.createElement(\"div\",{className:\"suggestion-box\"},suggestionMap)),/*#__PURE__*/React.createElement(Col,null,toggles))));}}]);return TickerList;}(Component);export default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/stock screener/src/components/TickerList.js"],"names":["React","Component","getTicker","createNode","add","suggest","tickerData","Container","Row","Col","cleanup","TickerList","props","handleDisplayChange","e","setState","currentDisplay","target","value","onChange","tickerArr","ticker","push","root","str","toUpperCase","suggestions","newTicker","slice","length","onSubmit","preventDefault","state","newestTicker","tickerList","Object","entries","containsTicker","submittedTicker","i","undefined","alert","localStorage","setItem","JSON","stringify","suggestionSubmit","clickedSuggestion","textContent","containsTickerv2","setActive","setActiveTicker","removeTicker","itemToBeRemoved","newState","iterate","prevState","localtickerList","getItem","localtickerListObj","parse","suggestionMap","map","suggestion","tickerMap","item","price","Math","sign","changePercent","addTickerForm","toggles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\nimport { createNode, add, suggest } from './trie'\nimport tickerData from '../common_stocks/aggregate.json'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { cleanup } from '@testing-library/react'\n\n\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            currentDisplay: 'price',\n            tickerList: [],\n            suggestions: []\n        }\n    }\n\n    componentDidMount() {\n        const localtickerList = localStorage.getItem('localTickers')\n        const localtickerListObj = JSON.parse(localtickerList)\n        if(localtickerListObj) {\n            this.setState({\n                tickerList: localtickerListObj\n            })\n        } else return\n    }\n\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n\n    onChange = (e) => {\n\n        // CREATE TICKER ARRAY FROM JSON DATA\n\n        let tickerArr = []\n        for(const ticker of tickerData) {\n            tickerArr.push(ticker[\"Symbol\"])\n        }\n\n        // const tickerDataDict = {}\n        // tickerData.forEach((company) => {\n        //     tickerDataDict[company[\"Symbol\"]] = {\n        //         symbol: company['Symbol'],\n        //         name: company['Name']\n        //     }\n        // })\n\n        // Commented out above is a working dictionary of ticker items. Decided to to just render simple array for trie  \n\n\n        // INSTANTIATE ROOT AND POPULATE TRIE TREE\n\n        const root = new createNode(null)\n\n        for(const ticker of tickerArr) {\n            add(ticker, 0, root)\n        }\n\n        //  CALL SUGGEST() ON INPUT VALUE AND SET SUGGESTION STATE FOR JSX MAP / RENDER\n\n        const str = e.target.value.toUpperCase()\n    \n        const suggestions = suggest(str, 0, root)\n\n        this.setState({\n            newTicker: e.target.value,\n            suggestions: suggestions.slice(0,10)\n        })\n\n        // RESET SUGGESTION ARRAY\n\n        if(str.length === 0){ \n            this.setState({\n                suggestions: ''\n            })\n        } \n    }\n\n    onSubmit = async (e) => {   \n        e.preventDefault()\n        const newestTicker = await getTicker(this.state.newTicker)\n        const tickerList = Object.entries(this.state.tickerList)\n\n        const containsTicker = (submittedTicker) => {\n            for(let i = 0; i < tickerList.length; i++) {\n                if(tickerList[i][1][\"ticker\"] === submittedTicker) {\n                    return true\n                }\n            }\n            return false\n        } \n\n        // I should consider making use of forEach in containsTicker instead of a for loop.\n        // I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \n\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Please enter a valid ticker\")\n        } else if(containsTicker(newestTicker[\"ticker\"])) { \n            alert(\"That ticker is already in your list\")\n        } else {\n                this.setState({\n                    tickerList: [...this.state.tickerList, newestTicker],\n                    suggestions: '',\n                    newTicker: ''\n                    })\n                localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList))   \n            }\n    }\n\n    // Below is the suggestion box submit logic, needs cleaning / condesing from the above \n\n    suggestionSubmit = async (e) => {\n        const clickedSuggestion = e.target.textContent       \n        const newestTicker = await getTicker(clickedSuggestion)\n        const tickerList = this.state.tickerList\n        const containsTickerv2 = (submittedTicker) => {\n            for(let i = 0; i < tickerList.length; i++) {\n                if(tickerList[i][\"ticker\"] === clickedSuggestion) {\n                    return true\n                }\n            }\n            return false\n        } \n\n        if(clickedSuggestion === undefined) {\n            alert(\"Please enter a valid ticker\")\n        } else if (containsTickerv2(clickedSuggestion)) {\n            alert(\"That ticker is already in your list\")\n        } else {\n            this.setState({\n                tickerList: [...this.state.tickerList, newestTicker],\n                suggestions: '',\n                newTicker: ''\n                })\n            localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList))  \n        }    \n    }\n\n\n    setActive = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n\n    // I should rewrite the removeTicker() fuction with forEach() or filter() ... the for loop and .push() usage is just sad. \n\n    removeTicker = (itemToBeRemoved) => {\n        return () => {\n            const newState = []\n            function iterate(prevState) {\n                for(let i = 0; i <prevState.length; i++) {\n                    if(prevState[i][\"ticker\"] !== itemToBeRemoved) {\n                        newState.push(prevState[i])\n                    } \n                }\n                return newState\n            }\n\n            iterate(this.state.tickerList)\n\n            this.setState({\n                tickerList: newState\n            })\n            localStorage.setItem('localTickers', JSON.stringify(newState))\n        }\n    }\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n        const suggestions = this.state.suggestions\n\n   \n        const suggestionMap = suggestions === '' ? null : suggestions.map((suggestion) => {\n            return <div className=\"suggestion-row-item\" key={suggestion} value={suggestion} onClick={this.suggestionSubmit}>{suggestion}</div>\n        })\n\n        \n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") {\n                value = Math.sign(item.changePercent.slice(0,item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent   \n            }\n            return <Container key={item.ticker}>\n                        <Row>  \n                            <Col className=\"ticker-row\" onClick={this.setActive(item.ticker)} > \n                                <span className=\"ticker-name float-left\"> {item.ticker} </span> \n                                <span className=\"float-right\">  {value} </span> \n                            </Col>\n                            <Col xs={1}> \n                                <button className=\"remove-ticker-btns\" onClick={this.removeTicker(item.ticker)}>x</button>\n                            </Col>\n                        </Row> \n                    </Container>\n             \n        })\n    \n        const addTickerForm =   <div>\n                                        <form onSubmit = {this.onSubmit}> \n                                            <input  id=\"submit-form\"\n                                                    type=\"text\" \n                                                    value={this.state.newTicker} \n                                                    placeholder=\"Add Ticker...\" \n                                                    autoComplete=\"off\" \n                                                    onChange={this.onChange} \n                                                    required/> \n                                            {/* <input id=\"submit-btn\" type=\"submit\" value=\"submit\" /> */}\n                                        </form>\n                                </div>\n\n        const toggles = <div> \n                            <button className=\"ticker-btns\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button className=\"ticker-btns\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n\n        return  <div className=\"content-container\" id=\"ticker\" >\n\n                        <h5>Stocks</h5>\n\n                        <div className =\"ticker-map-container\"> \n                            <Container>\n                                {tickerMap} \n                            </Container>\n                        </div>\n\n                        <Container className=\"add-ticker-row d-flex justify-content-center\">\n                            <Row> \n                                <Col> \n\n                                    {addTickerForm}\n\n                                    <div className=\"suggestion-box\">\n\n                                            {suggestionMap}\n                                      \n                                    </div>\n                                </Col>\n\n                                <Col> \n                                    {toggles}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n\n    }\n}\n\nexport default TickerList"]},"metadata":{},"sourceType":"module"}