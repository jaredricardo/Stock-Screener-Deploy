{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport { getTicker } from '../api.js';\nimport './components.css';\nimport { createNode, add, suggest } from './jaredstrie';\nimport testData from '../common_stocks/test.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { BrowserRouter as Router, Link, Route, Switch, useParams } from 'react-router-dom';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplayChange = e => {\n      this.setState({\n        currentDisplay: e.target.value\n      });\n    };\n\n    this.onChange = e => {\n      const dataObj = Object.entries(testData);\n      const arr = [];\n      dataObj.forEach(([key, value]) => {\n        arr.push(value[\"Symbol\"]);\n        console.log(arr);\n      }); // for(let i = 0; i < testData.length; i++) {\n      //     symbolArr.push(testData[i][\"Symbol\"])\n      // } \n      // console.log(symbolArr)\n      // const symbolArr = [\"a\",\"aa\",\"ap\",\"ab\",\"am\",\"abc\", \"aac\"]\n      // const root = new createNode(null)\n      // for(const item of symbolArr) {\n      //         add(item, 0, root)\n      // }\n      // const str = e.target.value\n      // const predictions = suggest(str, 0, root)\n      // console.log(predictions)\n\n      console.log(e.target.value);\n      this.setState({\n        newTicker: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const newestTicker = await getTicker(this.state.newTicker);\n      const tickerList = Object.entries(this.state.tickerList);\n\n      const containsTicker = submittedTicker => {\n        for (let i = 0; i < tickerList.length; i++) {\n          if (tickerList[i][1][\"ticker\"] === submittedTicker) {\n            return true;\n          }\n        }\n\n        return false;\n      }; // I should consider making use of forEach in containsTicker instead of a for loop.\n      // I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \n\n\n      if (newestTicker[\"ticker\"] === undefined) {\n        alert(\"Please enter a valid ticker\");\n      } else if (containsTicker(newestTicker[\"ticker\"])) {\n        alert(\"That ticker is already in your list\");\n      } else {\n        this.setState({\n          tickerList: [...this.state.tickerList, newestTicker],\n          newTicker: ''\n        });\n        localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList));\n      }\n    };\n\n    this.setActive = ticker => {\n      return () => this.props.setActiveTicker(ticker);\n    };\n\n    this.removeTicker = itemToBeRemoved => {\n      return () => {\n        const newState = [];\n\n        function iterate(prevState) {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i][\"ticker\"] != itemToBeRemoved) {\n              newState.push(prevState[i]);\n            }\n          }\n\n          return newState;\n        }\n\n        iterate(this.state.tickerList);\n        this.setState({\n          tickerList: newState\n        });\n        localStorage.setItem('localTickers', JSON.stringify(newState));\n      };\n    };\n\n    this.state = {\n      newTicker: '',\n      currentDisplay: 'price',\n      tickerList: []\n    };\n  }\n\n  componentDidMount() {\n    const localtickerList = localStorage.getItem('localTickers');\n    const localtickerListObj = JSON.parse(localtickerList);\n\n    if (localtickerListObj) {\n      this.setState({\n        tickerList: localtickerListObj\n      });\n    } else return;\n  }\n\n  render() {\n    const tickerList = this.state.tickerList;\n    const tickerMap = tickerList.map(item => {\n      let value = item.price;\n\n      if (this.state.currentDisplay === \"percentChange\") {\n        value = Math.sign(item.changePercent.slice(0, item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent;\n      }\n\n      return /*#__PURE__*/React.createElement(Link, {\n        to: `/${item.ticker}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: item.ticker,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"ticker-row\",\n        onClick: this.setActive(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ticker-name float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }\n      }, \" \", item.ticker, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }, \"  \", value, \" \")), /*#__PURE__*/React.createElement(Col, {\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"remove-ticker-btns\",\n        onClick: this.removeTicker(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 37\n        }\n      }, \"x\")))));\n    });\n    const addTickerForm = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit-form\",\n      type: \"text\",\n      value: this.state.newTicker,\n      placeholder: \"Add Ticker...\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 45\n      }\n    })));\n    const toggles = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"price\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"percentChange\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, \" Percent \"));\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"ticker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \"Stocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, tickerMap)), /*#__PURE__*/React.createElement(Container, {\n      className: \"add-ticker-row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }, addTickerForm), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, toggles)))));\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js"],"names":["React","Component","getTicker","createNode","add","suggest","testData","Container","Row","Col","BrowserRouter","Router","Link","Route","Switch","useParams","TickerList","constructor","props","handleDisplayChange","e","setState","currentDisplay","target","value","onChange","dataObj","Object","entries","arr","forEach","key","push","console","log","newTicker","onSubmit","preventDefault","newestTicker","state","tickerList","containsTicker","submittedTicker","i","length","undefined","alert","localStorage","setItem","JSON","stringify","setActive","ticker","setActiveTicker","removeTicker","itemToBeRemoved","newState","iterate","prevState","componentDidMount","localtickerList","getItem","localtickerListObj","parse","render","tickerMap","map","item","price","Math","sign","changePercent","slice","addTickerForm","toggles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\nimport { createNode, add, suggest } from './jaredstrie'\nimport testData from '../common_stocks/test.json'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { BrowserRouter as Router, Link, Route, Switch, useParams    } from 'react-router-dom';\n\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            currentDisplay: 'price',\n            tickerList: [\n               \n            ]\n        }\n    }\n\n    componentDidMount() {\n        const localtickerList = localStorage.getItem('localTickers')\n        const localtickerListObj = JSON.parse(localtickerList)\n        if(localtickerListObj) {\n            this.setState({\n                tickerList: localtickerListObj\n            })\n        } else return\n    }\n\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n\n    // autoSearch = (e) => {\n        // const symbolArr = []\n\n        // for(let i = 0; i < testData.length; i++) {\n        //     symbolArr.push(testData[i][\"Symbol\"])\n        // } \n\n        // const root = new createNode('\\a')\n\n        // for(const item of symbolArr) {\n        //         add(item, 0, root)\n        // }\n\n        // function handler(e){\n        //     const str = e.target.value\n        //     const predictions = suggest(str,0, root)\n        //     console.log(predictions)\n        // }\n        // handler();\n    // }\n\n    onChange = (e) => {\n\n        const dataObj = Object.entries(testData)\n        const arr = []\n            dataObj.forEach(([key, value]) => {\n                arr.push(value[\"Symbol\"])\n                console.log(arr)\n            })\n        \n        // for(let i = 0; i < testData.length; i++) {\n        //     symbolArr.push(testData[i][\"Symbol\"])\n        // } \n        // console.log(symbolArr)\n\n        // const symbolArr = [\"a\",\"aa\",\"ap\",\"ab\",\"am\",\"abc\", \"aac\"]\n        \n        // const root = new createNode(null)\n\n        // for(const item of symbolArr) {\n        //         add(item, 0, root)\n        // }\n        \n        // const str = e.target.value\n        // const predictions = suggest(str, 0, root)\n\n        // console.log(predictions)\n    \n        console.log(e.target.value)\n        this.setState({\n            newTicker: e.target.value\n        })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const newestTicker = await getTicker(this.state.newTicker)\n        const tickerList = Object.entries(this.state.tickerList)\n\n        const containsTicker = (submittedTicker) => {\n            for(let i = 0; i < tickerList.length; i++) {\n                if(tickerList[i][1][\"ticker\"] === submittedTicker) {\n                    return true\n                }\n            }\n            return false\n        } \n\n       \n        // I should consider making use of forEach in containsTicker instead of a for loop.\n        // I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \n\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Please enter a valid ticker\")\n        } else if(containsTicker(newestTicker[\"ticker\"])) { \n            alert(\"That ticker is already in your list\")\n        } else {\n                this.setState({\n                    tickerList: [...this.state.tickerList, newestTicker],\n                    newTicker: ''\n                })\n                localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList))\n            }\n    }\n\n\n    setActive = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n\n    // I should rewrite the removeTicker() fuction with forEach() or filter() ... the for loop and .push() usage is just sad. \n\n    removeTicker = (itemToBeRemoved) => {\n        return () => {\n\n            const newState = []\n            function iterate(prevState) {\n                for(let i = 0; i <prevState.length; i++) {\n                    if(prevState[i][\"ticker\"] != itemToBeRemoved) {\n                        newState.push(prevState[i])\n                    } \n                }\n                return newState\n            }\n\n            iterate(this.state.tickerList)\n\n            this.setState({\n                tickerList: newState\n            })\n            localStorage.setItem('localTickers', JSON.stringify(newState))\n        }\n    }\n\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n       \n\n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") {\n                value = Math.sign(item.changePercent.slice(0,item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent   \n            }\n            return  <Link to={`/${item.ticker}`}> \n                        <Container>\n                            <Row key={item.ticker}>  \n                                <Col className=\"ticker-row\" onClick={this.setActive(item.ticker)} > \n                                    <span className=\"ticker-name float-left\"> {item.ticker} </span> \n                                    <span className=\"float-right\">  {value} </span> \n                                </Col>\n                                <Col xs={1}> \n                                    <button className=\"remove-ticker-btns\" onClick={this.removeTicker(item.ticker)}>x</button>\n                                </Col>\n                            </Row> \n                        </Container>\n                    </Link>\n        })\n    \n        const addTickerForm =   <div>\n                                        <form onSubmit = {this.onSubmit}> \n                                            <input id=\"submit-form\"type=\"text\" value={this.state.newTicker} placeholder=\"Add Ticker...\" autoComplete=\"off\" onChange={this.onChange} required/> \n                                            {/* <input id=\"submit-btn\" type=\"submit\" value=\"submit\" /> */}\n                                        </form>\n                                </div>\n\n        const toggles = <div> \n                            <button className=\"ticker-btns\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button className=\"ticker-btns\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n\n        return  <Router > \n                    <div className=\"content-container\" id=\"ticker\" >\n                        <h5>Stocks</h5>\n\n                        <div className =\"ticker-map-container\"> \n                            <Container>\n                                {tickerMap} \n                            </Container>\n                        </div>\n\n                        <Container className=\"add-ticker-row d-flex justify-content-center\">\n                            <Row> \n                                <Col> \n                                    {addTickerForm}\n                                </Col>\n\n                                <Col> \n                                    {toggles}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </Router>\n    }\n}\n\nexport default TickerList"]},"metadata":{},"sourceType":"module"}