{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js\";\nimport React, { Component } from 'react';\nimport { newsAPI } from '../api';\nimport { removeTypeDuplicates, numericLiteral } from '@babel/types';\nexport class NewsAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLinks = async () => {\n      if (this.props.activeTicker === null) return;\n\n      if (this.props.activeTicker) {\n        const data = await newsAPI(this.props.activeTicker);\n        const articleDict = {};\n        data.articles.forEach(article => {\n          articleDict[article.urlToImage] = {\n            title: article.title,\n            url: article.url,\n            imgURL: article.urlToImage,\n            publishDate: article.publishedAt.slice(0, 10)\n          };\n        });\n        const numbOfArticles = 5;\n        this.setState({\n          newsList: Object.values(articleDict).slice(0, numberOfArticles)\n        });\n      }\n    };\n\n    this.state = {\n      newsList: []\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.activeTicker === null) return;\n\n    if (this.props.activeTicker) {\n      const data = await newsAPI(this.props.activeTicker);\n      const articleDict = {};\n      data.articles.forEach(article => {\n        articleDict[article.urlToImage] = {\n          title: article.title,\n          url: article.url,\n          imgURL: article.urlToImage,\n          publishDate: article.publishedAt.slice(0, 10)\n        };\n      });\n      this.setState({\n        newsList: Object.values(articleDict).slice(0, 5)\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.activeTicker !== this.props.activeTicker) {\n      this.updateLinks();\n    }\n  }\n\n  render() {\n    const newsList = this.state.newsList;\n    const newsListMap = newsList.map(item => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url,\n        target: \"_blank\",\n        key: item.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \" \", item.title, \" published on \", item.publishDate, \" \"));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, newsListMap));\n  }\n\n}\nexport default NewsAPI; // api key : 7339cb8efbde43e7b74b3a32535367a7\n//old news API parsing \n// updateLinks = async () => {\n//     if(this.state.newsList === null) return\n//     if(this.props.activeTicker) {\n//         const data = await newsAPI(this.props.activeTicker)\n//         let newsList = []\n//         let j = 5 // number of news articles rendered \n//         for(let i = 0; i < j; i++) {\n//             let article = {\n//                 title: data[\"articles\"][i][\"title\"],\n//                 url: data[\"articles\"][i][\"url\"],\n//                 imgURL: data[\"articles\"][i][\"urlToImage\"],\n//                 publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n//             }\n//             newsList.push(article)\n//         }\n//         this.setState({\n//             newsList: newsList\n//         })\n//     }\n// }","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js"],"names":["React","Component","newsAPI","removeTypeDuplicates","numericLiteral","NewsAPI","constructor","props","updateLinks","activeTicker","data","articleDict","articles","forEach","article","urlToImage","title","url","imgURL","publishDate","publishedAt","slice","numbOfArticles","setState","newsList","Object","values","numberOfArticles","state","componentDidMount","componentDidUpdate","prevProps","render","newsListMap","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { newsAPI } from '../api'\nimport { removeTypeDuplicates, numericLiteral } from '@babel/types'\n\nexport class NewsAPI extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newsList:[]\n        }\n    }\n\n\n    async componentDidMount() {\n        if(this.props.activeTicker === null) return\n        if(this.props.activeTicker) {\n            const data = await newsAPI(this.props.activeTicker)\n            const articleDict = {}\n            data.articles.forEach((article) => {\n                articleDict[article.urlToImage] = {\n                    title: article.title,\n                    url: article.url,\n                    imgURL: article.urlToImage,\n                    publishDate: article.publishedAt.slice(0, 10)\n                }\n            })\n\n            this.setState({\n                newsList: Object.values(articleDict).slice(0,5)\n            })\n        }\n    }\n\n\n    updateLinks = async () => {\n        if(this.props.activeTicker === null) return\n        if(this.props.activeTicker) {\n            const data = await newsAPI(this.props.activeTicker)\n            const articleDict = {}\n            data.articles.forEach((article) => {\n                articleDict[article.urlToImage] = {\n                    title: article.title,\n                    url: article.url,\n                    imgURL: article.urlToImage,\n                    publishDate: article.publishedAt.slice(0, 10)\n                }\n            })\n\n            const numbOfArticles = 5\n\n            this.setState({\n                newsList: Object.values(articleDict).slice(0,numberOfArticles)\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.activeTicker !== this.props.activeTicker){\n            this.updateLinks()\n        }\n    }\n\n\n    render() {\n\n        const newsList = this.state.newsList\n\n        const newsListMap = newsList.map((item) => {\n            return <a href={item.url} target=\"_blank\" key ={item.url}>    \n                        <li> {item.title} published on {item.publishDate} </li>\n                    </a>\n        })\n\n\n        return (\n            <div>\n                <ul>\n                     {newsListMap}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default NewsAPI\n\n\n\n// api key : 7339cb8efbde43e7b74b3a32535367a7\n\n\n\n//old news API parsing \n\n// updateLinks = async () => {\n//     if(this.state.newsList === null) return\n//     if(this.props.activeTicker) {\n//         const data = await newsAPI(this.props.activeTicker)\n//         let newsList = []\n//         let j = 5 // number of news articles rendered \n//         for(let i = 0; i < j; i++) {\n//             let article = {\n//                 title: data[\"articles\"][i][\"title\"],\n//                 url: data[\"articles\"][i][\"url\"],\n//                 imgURL: data[\"articles\"][i][\"urlToImage\"],\n//                 publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n//             }\n//             newsList.push(article)\n//         }\n//         this.setState({\n//             newsList: newsList\n//         })\n//     }\n\n// }"]},"metadata":{},"sourceType":"module"}