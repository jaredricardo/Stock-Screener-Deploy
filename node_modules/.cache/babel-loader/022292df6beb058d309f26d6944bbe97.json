{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport { getTicker } from '../api.js';\nimport './components.css';\nimport { createNode, add, suggest } from './jaredstrie';\nimport tickerData from '../common_stocks/test.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { BrowserRouter as Router, Link, Route, Switch, useParams } from 'react-router-dom';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplayChange = e => {\n      this.setState({\n        currentDisplay: e.target.value\n      });\n    };\n\n    this.onChange = e => {\n      // CREATE TICKER ARRAY FROM JSON DATA\n      let tickerArr = [];\n      let tickerNameArr = [];\n\n      for (const ticker of tickerData) {\n        tickerArr.push(ticker[\"Symbol\"]);\n      } // INSANTIATE ROOT AND POPULATE TRIE TREE\n\n\n      const root = new createNode(null);\n\n      for (const ticker of tickerArr) {\n        add(ticker, 0, root);\n      } //  CALL SUGGEST() ON INPUT VALUE AND SET SUGGESTION STATE FOR JSX MAP / RENDER\n\n\n      const str = e.target.value.toUpperCase();\n      const suggestions = suggest(str, 0, root);\n      this.setState({\n        newTicker: e.target.value,\n        suggestions: suggestions.slice(0, 10)\n      }); // RESET SUGGESTION ARRAY\n\n      if (str.length === 0) {\n        this.setState({\n          suggestions: ''\n        });\n      }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const newestTicker = await getTicker(this.state.newTicker);\n      const tickerList = Object.entries(this.state.tickerList);\n\n      const containsTicker = submittedTicker => {\n        for (let i = 0; i < tickerList.length; i++) {\n          if (tickerList[i][1][\"ticker\"] === submittedTicker) {\n            return true;\n          }\n        }\n\n        return false;\n      }; // I should consider making use of forEach in containsTicker instead of a for loop.\n      // I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \n\n\n      if (newestTicker[\"ticker\"] === undefined) {\n        alert(\"Please enter a valid ticker\");\n      } else if (containsTicker(newestTicker[\"ticker\"])) {\n        alert(\"That ticker is already in your list\");\n      } else {\n        this.setState({\n          tickerList: [...this.state.tickerList, newestTicker],\n          suggestions: '',\n          newTicker: ''\n        });\n        localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList));\n      }\n    };\n\n    this.setActive = ticker => {\n      return () => this.props.setActiveTicker(ticker);\n    };\n\n    this.removeTicker = itemToBeRemoved => {\n      return () => {\n        const newState = [];\n\n        function iterate(prevState) {\n          for (let i = 0; i < prevState.length; i++) {\n            if (prevState[i][\"ticker\"] != itemToBeRemoved) {\n              newState.push(prevState[i]);\n            }\n          }\n\n          return newState;\n        }\n\n        iterate(this.state.tickerList);\n        this.setState({\n          tickerList: newState\n        });\n        localStorage.setItem('localTickers', JSON.stringify(newState));\n      };\n    };\n\n    this.state = {\n      newTicker: '',\n      currentDisplay: 'price',\n      tickerList: [],\n      suggestions: []\n    };\n  }\n\n  componentDidMount() {\n    const localtickerList = localStorage.getItem('localTickers');\n    const localtickerListObj = JSON.parse(localtickerList);\n\n    if (localtickerListObj) {\n      this.setState({\n        tickerList: localtickerListObj\n      });\n    } else return;\n  }\n\n  render() {\n    const tickerList = this.state.tickerList;\n    const suggestions = this.state.suggestions;\n    const suggestionMap = suggestions === '' ? null : suggestions.map(suggestion => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"suggestion-row-item\",\n        key: suggestion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 20\n        }\n      }, \" \", suggestion, \" \");\n    });\n    const tickerMap = tickerList.map(item => {\n      let value = item.price;\n\n      if (this.state.currentDisplay === \"percentChange\") {\n        value = Math.sign(item.changePercent.slice(0, item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent;\n      }\n\n      return /*#__PURE__*/React.createElement(Link, {\n        to: `/${item.ticker}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: item.ticker,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"ticker-row\",\n        onClick: this.setActive(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ticker-name float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }\n      }, \" \", item.ticker, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 37\n        }\n      }, \"  \", value, \" \")), /*#__PURE__*/React.createElement(Col, {\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"remove-ticker-btns\",\n        onClick: this.removeTicker(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 37\n        }\n      }, \"x\")))));\n    });\n    const addTickerForm = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit-form\",\n      type: \"text\",\n      value: this.state.newTicker,\n      placeholder: \"Add Ticker...\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    })));\n    const toggles = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"price\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ticker-btns\",\n      value: \"percentChange\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, \" Percent \"));\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"ticker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"Stocks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, tickerMap)), /*#__PURE__*/React.createElement(Container, {\n      className: \"add-ticker-row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, addTickerForm, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"suggestion-box\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 37\n      }\n    }, suggestionMap)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, toggles)))));\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api-copy/src/components/TickerList.js"],"names":["React","Component","getTicker","createNode","add","suggest","tickerData","Container","Row","Col","BrowserRouter","Router","Link","Route","Switch","useParams","TickerList","constructor","props","handleDisplayChange","e","setState","currentDisplay","target","value","onChange","tickerArr","tickerNameArr","ticker","push","root","str","toUpperCase","suggestions","newTicker","slice","length","onSubmit","preventDefault","newestTicker","state","tickerList","Object","entries","containsTicker","submittedTicker","i","undefined","alert","localStorage","setItem","JSON","stringify","setActive","setActiveTicker","removeTicker","itemToBeRemoved","newState","iterate","prevState","componentDidMount","localtickerList","getItem","localtickerListObj","parse","render","suggestionMap","map","suggestion","tickerMap","item","price","Math","sign","changePercent","addTickerForm","toggles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\nimport { createNode, add, suggest } from './jaredstrie'\nimport tickerData from '../common_stocks/test.json'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { BrowserRouter as Router, Link, Route, Switch, useParams    } from 'react-router-dom';\n\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            currentDisplay: 'price',\n            tickerList: [],\n            suggestions: []\n        }\n    }\n\n    componentDidMount() {\n        const localtickerList = localStorage.getItem('localTickers')\n        const localtickerListObj = JSON.parse(localtickerList)\n        if(localtickerListObj) {\n            this.setState({\n                tickerList: localtickerListObj\n            })\n        } else return\n    }\n\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n    onChange = (e) => {\n\n        // CREATE TICKER ARRAY FROM JSON DATA\n\n        let tickerArr = []\n        let tickerNameArr = []\n        for(const ticker of tickerData) {\n            tickerArr.push(ticker[\"Symbol\"])\n        }\n\n        // INSANTIATE ROOT AND POPULATE TRIE TREE\n\n        const root = new createNode(null)\n\n        for(const ticker of tickerArr) {\n            add(ticker, 0, root)\n        }\n        \n        \n\n        //  CALL SUGGEST() ON INPUT VALUE AND SET SUGGESTION STATE FOR JSX MAP / RENDER\n\n        const str = e.target.value.toUpperCase()\n    \n        const suggestions = suggest(str, 0, root)\n\n        this.setState({\n            newTicker: e.target.value,\n            suggestions: suggestions.slice(0,10)\n        })\n\n        // RESET SUGGESTION ARRAY\n\n        if(str.length === 0){ \n            this.setState({\n                suggestions: ''\n            })\n        } \n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const newestTicker = await getTicker(this.state.newTicker)\n        const tickerList = Object.entries(this.state.tickerList)\n\n        const containsTicker = (submittedTicker) => {\n            for(let i = 0; i < tickerList.length; i++) {\n                if(tickerList[i][1][\"ticker\"] === submittedTicker) {\n                    return true\n                }\n            }\n            return false\n        } \n\n        // I should consider making use of forEach in containsTicker instead of a for loop.\n        // I should also consider cleaning up the logic of below for. Namely newestTicker[\"ticker\"]. \n\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Please enter a valid ticker\")\n        } else if(containsTicker(newestTicker[\"ticker\"])) { \n            alert(\"That ticker is already in your list\")\n        } else {\n                this.setState({\n                    tickerList: [...this.state.tickerList, newestTicker],\n                    suggestions: '',\n                    newTicker: ''\n                })\n                localStorage.setItem('localTickers', JSON.stringify(this.state.tickerList))\n            }\n    }\n\n\n    setActive = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n\n    // I should rewrite the removeTicker() fuction with forEach() or filter() ... the for loop and .push() usage is just sad. \n\n    removeTicker = (itemToBeRemoved) => {\n        return () => {\n\n            const newState = []\n            function iterate(prevState) {\n                for(let i = 0; i <prevState.length; i++) {\n                    if(prevState[i][\"ticker\"] != itemToBeRemoved) {\n                        newState.push(prevState[i])\n                    } \n                }\n                return newState\n            }\n\n            iterate(this.state.tickerList)\n\n            this.setState({\n                tickerList: newState\n            })\n            localStorage.setItem('localTickers', JSON.stringify(newState))\n        }\n    }\n\n\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n        const suggestions = this.state.suggestions\n\n        const suggestionMap = suggestions === '' ? null : suggestions.map((suggestion) => {\n            return <div className=\"suggestion-row-item\" key={suggestion}> {suggestion} </div>\n        })\n       \n\n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") {\n                value = Math.sign(item.changePercent.slice(0,item.changePercent.length - 1)) === 1 ? '+' + item.changePercent : item.changePercent   \n            }\n            return  <Link to={`/${item.ticker}`}> \n                        <Container>\n                            <Row key={item.ticker}>  \n                                <Col className=\"ticker-row\" onClick={this.setActive(item.ticker)} > \n                                    <span className=\"ticker-name float-left\"> {item.ticker} </span> \n                                    <span className=\"float-right\">  {value} </span> \n                                </Col>\n                                <Col xs={1}> \n                                    <button className=\"remove-ticker-btns\" onClick={this.removeTicker(item.ticker)}>x</button>\n                                </Col>\n                            </Row> \n                        </Container>\n                    </Link>\n        })\n    \n        const addTickerForm =   <div>\n                                        <form onSubmit = {this.onSubmit}> \n                                            <input  id=\"submit-form\"\n                                                    type=\"text\" \n                                                    value={this.state.newTicker} \n                                                    placeholder=\"Add Ticker...\" \n                                                    autoComplete=\"off\" \n                                                    onChange={this.onChange} \n                                                    required/> \n                                            {/* <input id=\"submit-btn\" type=\"submit\" value=\"submit\" /> */}\n                                        </form>\n                                </div>\n\n        const toggles = <div> \n                            <button className=\"ticker-btns\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button className=\"ticker-btns\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n\n        return  <Router > \n                    <div className=\"content-container\" id=\"ticker\" >\n\n                        <h5>Stocks</h5>\n\n                        <div className =\"ticker-map-container\"> \n                            <Container>\n                                {tickerMap} \n                            </Container>\n                        </div>\n\n                        <Container className=\"add-ticker-row d-flex justify-content-center\">\n                            <Row> \n                                <Col> \n\n                                    {addTickerForm}\n\n                                    <div className=\"suggestion-box\" onClick={this.onSubmit}>\n                                       \n                                            {suggestionMap}\n                                      \n                                    </div>\n                                </Col>\n\n                                <Col> \n                                    {toggles}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </Router>\n    }\n}\n\nexport default TickerList"]},"metadata":{},"sourceType":"module"}