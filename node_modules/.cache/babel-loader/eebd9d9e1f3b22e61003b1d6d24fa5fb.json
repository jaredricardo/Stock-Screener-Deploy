{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{newsAPI}from'../api';import'./components.css';import'bootstrap/dist/css/bootstrap.min.css';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';export var NewsAPI=/*#__PURE__*/function(_Component){_inherits(NewsAPI,_Component);var _super=_createSuper(NewsAPI);function NewsAPI(props){var _this;_classCallCheck(this,NewsAPI);_this=_super.call(this,props);_this.updateLinks=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,articleDict,ordered,numbOfArticles;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(_this.props.activeTicker===null||_this.props.activeTicker===undefined)){_context.next=4;break;}return _context.abrupt(\"return\");case 4:_context.next=6;return newsAPI(_this.props.activeTicker);case 6:data=_context.sent;articleDict={};data.articles.forEach(function(article){articleDict[article.publishedAt]={publisher:article.source.name,title:article.title,url:article.url,imgURL:article.urlToImage,publishDate:article.publishedAt.slice(0,10)};});ordered={};Object.keys(articleDict).sort().forEach(function(key){ordered[key]=articleDict[key];});numbOfArticles=10;_this.setState({newsList:Object.values(ordered).slice(10,10+numbOfArticles).reverse()// in the above set state, reverse method creates descending order of of articles (most recent first)\n// and the slice method slices out the oldest 10 articles from the api, leaving only the newest 20. \n// It's worth mentioning that the API sends articles in batches of 20, hence the 10/10 split. \n});case 13:case\"end\":return _context.stop();}}},_callee);}));_this.state={newsList:[]};return _this;}_createClass(NewsAPI,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(this.props.activeTicker===undefined)){_context2.next=4;break;}return _context2.abrupt(\"return\");case 4:this.updateLinks();case 5:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.activeTicker===undefined){return;}else if(prevProps.activeTicker!=this.props.activeTicker){this.updateLinks();}}},{key:\"render\",value:function render(){var _this2=this;var newsList=this.state.newsList;var newsListMap=newsList.map(function(item){var img=/*#__PURE__*/React.createElement(\"img\",{src:item.imgURL,height:\"50\",width:\"50\",style:{objectFit:\"cover\"}});var columnOneItems=/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{id:\"news-publishers\"},\"  \",item.publisher,\"       \"),/*#__PURE__*/React.createElement(Row,{id:\"news-publish-date\"},\"  \",item.publishDate,\"   \"),/*#__PURE__*/React.createElement(Row,{id:\"news-title\"},\"         \",item.title,\"         \"));var columnTwoItems=/*#__PURE__*/React.createElement(\"div\",null,img);var format=/*#__PURE__*/React.createElement(\"div\",{className:\"news-row-item\",key:item.url},/*#__PURE__*/React.createElement(\"a\",{href:item.url,target:\"_blank\"/* style={{textDecoration:\"none\"}}*/},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:10,lg:10,md:10,xs:10},columnOneItems),/*#__PURE__*/React.createElement(Col,{xl:2,lg:2,md:2,xs:2,className:\"d-flex align-items-center justify-content-center\"},columnTwoItems))));return format;});var newsBanner=function newsBanner(){if(_this2.props.activeTicker===null||_this2.props.activeTicker===undefined){return/*#__PURE__*/React.createElement(\"h5\",null,\" Select ticker for news \");}else{return/*#__PURE__*/React.createElement(\"h5\",null,\" News for \",_this2.props.activeTicker,\" \");}};return/*#__PURE__*/React.createElement(\"div\",{className:\"content-container\",id:\"news\"},/*#__PURE__*/React.createElement(\"div\",null,\" \",newsBanner(),\" \"),/*#__PURE__*/React.createElement(Container,{className:\"news-container\"},/*#__PURE__*/React.createElement(\"p\",null,\"Unfortunately, News API only enables CORS for localhost when using the free, developer model as I am, thus I cannot dynamically display news articles via this github deployment (unless I pay $500/month). Please view the source code and / or refer to the portfolio section of my personal website for a video demonstrating the News API as intended :-)\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"a\",{href:\"https://www.jaredricardo.io\",target:\"_blank\"},\" Jaredricardo.io \"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Additionally, the finance API I\\u2019m using for the stock information only allows 5 queries per minute for the free, developer version. This means an update function for the ticker information will not be called on reload, nor will you be able query for financial information indefinitely (add tickers, get new graph information, etc).\")));}}]);return NewsAPI;}(Component);export default NewsAPI;// api key : 7339cb8efbde43e7b74b3a32535367a7","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/Stock-Screener-Deploy/src/components/NewsAPI.js"],"names":["React","Component","newsAPI","Container","Row","Col","NewsAPI","props","updateLinks","activeTicker","undefined","data","articleDict","articles","forEach","article","publishedAt","publisher","source","name","title","url","imgURL","urlToImage","publishDate","slice","ordered","Object","keys","sort","key","numbOfArticles","setState","newsList","values","reverse","state","prevProps","newsListMap","map","item","img","objectFit","columnOneItems","columnTwoItems","format","newsBanner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { newsAPI } from '../api'\nimport './components.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container  from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport class NewsAPI extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            newsList:[]\n        }\n    }\n    \n   async componentDidMount(){\n        if(this.props.activeTicker === undefined) {\n            return\n        } else {\n            this.updateLinks()\n        }\n    }\n \n \n    updateLinks = async () => {\n        if(this.props.activeTicker === null || this.props.activeTicker === undefined) {\n            return\n        } else {\n          \n            const data = await newsAPI(this.props.activeTicker)\n           \n            const articleDict = {}\n            data.articles.forEach((article) => {\n                articleDict[article.publishedAt] = {\n                    publisher: article.source.name, \n                    title: article.title,\n                    url: article.url,\n                    imgURL: article.urlToImage,\n                    publishDate: article.publishedAt.slice(0, 10)  \n                }\n            })\n    \n            const ordered = {}\n            Object.keys(articleDict).sort().forEach(function(key){\n                ordered[key] = articleDict[key]\n            })\n            \n            const numbOfArticles = 10\n\n            this.setState({\n                newsList: Object.values(ordered).slice(10, 10 + numbOfArticles).reverse() \n                // in the above set state, reverse method creates descending order of of articles (most recent first)\n                // and the slice method slices out the oldest 10 articles from the api, leaving only the newest 20. \n                // It's worth mentioning that the API sends articles in batches of 20, hence the 10/10 split. \n            })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.activeTicker === undefined) {\n            return\n        } else if(prevProps.activeTicker != this.props.activeTicker){\n            this.updateLinks()\n        }\n    }\n\n\n    render() {\n\n        const newsList = this.state.newsList\n        \n        const newsListMap = newsList.map((item) => {\n\n            const img = <img src={item.imgURL} height=\"50\" width=\"50\" style={{objectFit:\"cover\"}} />\n\n            const columnOneItems =   \n                                    <Container>\n                                        <Row id=\"news-publishers\">  {item.publisher}       </Row> \n                                        <Row id=\"news-publish-date\">  {item.publishDate}   </Row> \n                                        <Row id=\"news-title\">         {item.title}         </Row>\n                                    </Container> \n\n            const columnTwoItems = <div> \n                                        {img}\n                                    </div>\n            \n\n            const format = \n                    <div className=\"news-row-item\" key={item.url}> \n                        <a href={item.url} target =\"_blank\" /* style={{textDecoration:\"none\"}}*/ >\n                            <Row>  \n                                <Col xl={10} lg={10} md={10} xs={10} >\n                                    {columnOneItems}\n                                </Col>\n\n                                <Col xl={2} lg={2} md={2} xs={2} className=\"d-flex align-items-center justify-content-center\">\n                                    {columnTwoItems}\n                                </Col>\n                            </Row>\n                        </a>\n                    </div>    \n\n            return format \n        })\n\n        const newsBanner = () => {\n            if(this.props.activeTicker === null || this.props.activeTicker === undefined) {\n                return <h5> Select ticker for news </h5>\n            } else {\n                return <h5> News for {this.props.activeTicker} </h5>\n            }\n        }\n\n        return (\n            <div className=\"content-container\" id=\"news\">\n\n            <div> {newsBanner()} </div>\n\n            <Container className=\"news-container\"> \n\n                {/* {newsListMap} */}\n                <p>\n                    Unfortunately, News API only enables CORS for localhost when using the free, developer model as I am, \n                    thus I cannot dynamically display news articles via this github deployment (unless I pay $500/month). \n                    Please view the source code and / or refer to the portfolio section of my personal website for a video demonstrating the News API as intended :-) \n                    <br></br>\n                    <br></br>\n                    <a href=\"https://www.jaredricardo.io\" target=\"_blank\"> Jaredricardo.io </a>\n                    <br></br>\n                    <br></br>\n                    Additionally, the finance API I’m using for the stock information only allows 5 queries per minute \n                    for the free, developer version. This means an update function for the ticker information will not\n                     be called on reload, nor will you be able query for financial information indefinitely (add tickers, \n                     get new graph information, etc). \n                </p>\n            \n            </Container>\n             \n            </div>\n        )\n    }\n}\n\nexport default NewsAPI\n\n\n\n// api key : 7339cb8efbde43e7b74b3a32535367a7\n\n"]},"metadata":{},"sourceType":"module"}