{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js\";\nimport React, { Component } from 'react';\nimport { newsAPI } from '../api';\nimport { removeTypeDuplicates } from '@babel/types';\nexport class NewsAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLinks = async () => {\n      if (this.state.newsList === null) return;\n\n      if (this.props.activeTicker) {\n        const data = await newsAPI(this.props.activeTicker);\n        let newsList = [];\n        let j = 5; // number of news articles rendered \n\n        for (let i = 0; i < j; i++) {\n          let article = {\n            title: data[\"articles\"][i][\"title\"],\n            url: data[\"articles\"][i][\"url\"],\n            imgURL: data[\"articles\"][i][\"urlToImage\"],\n            publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n          };\n          newsList.push(article);\n        }\n\n        this.setState({\n          newsList: newsList\n        });\n      }\n    };\n\n    this.state = {\n      newsList: []\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.activeTicker === null) return;\n\n    if (this.props.activeTicker) {\n      const data = await newsAPI(this.props.activeTicker);\n      const articleDict = {};\n      data.articles.forEach(article => {\n        articleDict[article.urlToImage] = {\n          title: article.title,\n          url: article.url,\n          imgURL: article.urlToImage,\n          publishDate: article.publishedAt.slice(0, 5)\n        };\n      });\n      console.log(articleDict);\n      this.setState({\n        newsList: Object.values(articleDict)\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.activeTicker !== this.props.activeTicker) {\n      this.updateLinks();\n    }\n  }\n\n  render() {\n    const newsList = this.state.newsList;\n    const newsListMap = newsList.map(item => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url,\n        target: \"_blank\",\n        key: item.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \" \", item.title, \" published on \", item.publishDate, \" \"));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, newsListMap));\n  }\n\n}\nexport default NewsAPI; // api key : 7339cb8efbde43e7b74b3a32535367a7","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/NewsAPI.js"],"names":["React","Component","newsAPI","removeTypeDuplicates","NewsAPI","constructor","props","updateLinks","state","newsList","activeTicker","data","j","i","article","title","url","imgURL","publishDate","slice","push","setState","componentDidMount","articleDict","articles","forEach","urlToImage","publishedAt","console","log","Object","values","componentDidUpdate","prevProps","render","newsListMap","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { newsAPI } from '../api'\nimport { removeTypeDuplicates } from '@babel/types'\n\nexport class NewsAPI extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newsList:[]\n        }\n    }\n\n\n    async componentDidMount() {\n        if(this.props.activeTicker === null) return\n        if(this.props.activeTicker) {\n            const data = await newsAPI(this.props.activeTicker)\n            const articleDict = {}\n            data.articles.forEach((article) => {\n                articleDict[article.urlToImage] = {\n                    title: article.title,\n                    url: article.url,\n                    imgURL: article.urlToImage,\n                    publishDate: article.publishedAt.slice(0, 5)\n                }\n            })\n\n            console.log(articleDict)\n\n            this.setState({\n                newsList: Object.values(articleDict)\n            })\n        }\n    }\n\n\n    updateLinks = async () => {\n        if(this.state.newsList === null) return\n        if(this.props.activeTicker) {\n            const data = await newsAPI(this.props.activeTicker)\n            let newsList = []\n            let j = 5 // number of news articles rendered \n            for(let i = 0; i < j; i++) {\n                let article = {\n                    title: data[\"articles\"][i][\"title\"],\n                    url: data[\"articles\"][i][\"url\"],\n                    imgURL: data[\"articles\"][i][\"urlToImage\"],\n                    publishDate: data[\"articles\"][i][\"publishedAt\"].slice(0, 10)\n                }\n                newsList.push(article)\n            }\n            this.setState({\n                newsList: newsList\n            })\n        }\n    \n    }\n\n    async componentDidUpdate(prevProps) {\n        if(prevProps.activeTicker !== this.props.activeTicker){\n            this.updateLinks()\n        }\n    }\n\n\n    render() {\n\n        const newsList = this.state.newsList\n\n        const newsListMap = newsList.map((item) => {\n            return <a href={item.url} target=\"_blank\" key ={item.url}>    \n                        <li> {item.title} published on {item.publishDate} </li>\n                    </a>\n        })\n\n\n        return (\n            <div>\n                <ul>\n                     {newsListMap}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default NewsAPI\n\n\n\n// api key : 7339cb8efbde43e7b74b3a32535367a7"]},"metadata":{},"sourceType":"module"}