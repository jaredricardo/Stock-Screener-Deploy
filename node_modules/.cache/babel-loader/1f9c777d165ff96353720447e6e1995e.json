{"ast":null,"code":"var _jsxFileName = \"/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js\";\nimport React, { Component } from 'react';\nimport { getTicker } from '../api.js';\nimport './components.css';\n\nclass TickerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDisplayChange = e => {\n      this.setState({\n        currentDisplay: e.target.value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        newTicker: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const newestTicker = await getTicker(this.state.newTicker);\n\n      if (newestTicker[\"ticker\"] === undefined) {\n        alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\");\n      } else {\n        this.setState({\n          tickerList: [...this.state.tickerList, newestTicker]\n        });\n      }\n    };\n\n    this.onClick = ticker => {\n      return () => this.props.setActiveTicker(ticker);\n    };\n\n    this.state = {\n      newTicker: '',\n      activeTicker: null,\n      currentDisplay: 'price',\n      tickerList: [{\n        'companyName': 'Amazon',\n        'ticker': 'amzn',\n        'price': '$666',\n        'volume': '1,000,000,000',\n        'changePercent': '+5%',\n        active: false\n      }, {\n        'companyName': 'Facebook',\n        'ticker': 'FB',\n        'price': '$420',\n        'volume': '123,456,789',\n        'changePercent': '-99.99%',\n        active: false\n      }, {\n        'companyName': 'Tesla',\n        'ticker': 'TSLA',\n        'price': '$69',\n        'volume': '420,696,666',\n        'changePercent': '+420%',\n        active: false\n      }]\n    };\n  }\n\n  render() {\n    const tickerList = this.state.tickerList;\n    const tickerMap = tickerList.map(item => {\n      let value = item.price;\n      if (this.state.currentDisplay === \"percentChange\") value = item.changePercent;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.ticker,\n        onClick: this.onClick(item.ticker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \" \", item.ticker, \" \", value, \" \");\n    });\n    const toggles = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-btn-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"price\",\n      value: \"price\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"percent\",\n      value: \"percentChange\",\n      onClick: this.handleDisplayChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \" Percent \"));\n    const addTickerForm = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-ticker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.newTicker,\n      placeholder: \"Add Ticker...\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      id: \"entire-ticker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ticker-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }\n    }, tickerMap), addTickerForm, toggles);\n  }\n\n}\n\nexport default TickerList;","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/apps/testing-api/src/components/TickerList.js"],"names":["React","Component","getTicker","TickerList","constructor","props","handleDisplayChange","e","setState","currentDisplay","target","value","onChange","newTicker","onSubmit","preventDefault","newestTicker","state","undefined","alert","tickerList","onClick","ticker","setActiveTicker","activeTicker","active","render","tickerMap","map","item","price","changePercent","toggles","addTickerForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getTicker } from '../api.js'\nimport './components.css'\n\n\n\nclass TickerList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            newTicker: '',\n            activeTicker: null,\n            currentDisplay: 'price',\n            tickerList: [\n                {\n                'companyName': 'Amazon',\n                'ticker': 'amzn',\n                'price': '$666',\n                'volume' : '1,000,000,000',\n                'changePercent': '+5%',\n                active: false\n                }, \n                {\n                'companyName':'Facebook',\n                'ticker':'FB',\n                'price': '$420',\n                'volume' : '123,456,789',\n                'changePercent': '-99.99%',\n                active: false\n                },\n                {\n                'companyName': 'Tesla',\n                'ticker':'TSLA',\n                'price': '$69',\n                'volume' : '420,696,666',\n                'changePercent':'+420%',\n                active: false\n                }\n            ]\n        }\n    }\n\n    handleDisplayChange = e => {\n        this.setState({\n            currentDisplay: e.target.value\n        })\n    }\n\n    \n    onChange = (e) => {\n       this.setState({\n           newTicker: e.target.value\n       })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        \n        const newestTicker = await getTicker(this.state.newTicker)\n        if(newestTicker[\"ticker\"] === undefined) {\n            alert(\"Either you've entered an invalid ticker or the API is has reached it calls per minute limit...\")\n        } else {\n                this.setState({tickerList: [...this.state.tickerList, newestTicker]})\n        }\n        \n    }\n\n    onClick = (ticker) => {\n        return () => this.props.setActiveTicker(ticker)\n    }\n    \n    render() {\n\n        const tickerList = this.state.tickerList\n\n        const tickerMap = tickerList.map((item) => {\n            let value = item.price\n            if(this.state.currentDisplay === \"percentChange\") value = item.changePercent\n            return  <li key={item.ticker} onClick={this.onClick(item.ticker)}> {item.ticker} {value} </li> \n        })\n    \n\n        const toggles = <div className=\"ticker-btn-container\"> \n                            <button id=\"price\" value=\"price\" onClick={this.handleDisplayChange}> Price </button>\n                            <button id=\"percent\" value=\"percentChange\" onClick={this.handleDisplayChange}> Percent </button>\n                        </div> \n\n        const addTickerForm =   <div className=\"add-ticker-container\">\n                                    <form onSubmit = {this.onSubmit}> \n                                        <input type=\"text\" value={this.state.newTicker} placeholder=\"Add Ticker...\" autoComplete=\"off\" onChange={this.onChange} /> \n                                        <input type=\"submit\" value=\"submit\" />\n                                    </form>\n                                </div>\n\n        return <div className=\"content-container\" id=\"entire-ticker-container\" >\n                     \n                     <div className =\"ticker-map-container\"> \n                        \n                        {tickerMap} \n\n                    </div>\n\n                        {addTickerForm}\n\n                        {toggles}\n                \n                </div>\n    }\n}\n\nexport default TickerList\n\n\n"]},"metadata":{},"sourceType":"module"}